[{"/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/index.js":"1","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/App.js":"2","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/reportWebVitals.js":"3","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/rotas/index.js":"4","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/servicos/context/index.js":"5","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/paginas/Login/index.js":"6","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/paginas/Principal/index.js":"7","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/paginas/CriarUsuario/index.js":"8","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/paginas/EditarUsuario/index.js":"9","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/servicos/api/index.js":"10","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/paginas/Principal/modal.js":"11"},{"size":500,"mtime":1632508264272,"results":"12","hashOfConfig":"13"},{"size":454,"mtime":1632587553615,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1632508264274,"results":"15","hashOfConfig":"13"},{"size":845,"mtime":1632592226225,"results":"16","hashOfConfig":"13"},{"size":371,"mtime":1632588879003,"results":"17","hashOfConfig":"13"},{"size":3684,"mtime":1633517514587,"results":"18","hashOfConfig":"13"},{"size":7783,"mtime":1633465009746,"results":"19","hashOfConfig":"13"},{"size":4705,"mtime":1633517685666,"results":"20","hashOfConfig":"13"},{"size":240,"mtime":1632510337581,"results":"21","hashOfConfig":"13"},{"size":246,"mtime":1632669593854,"results":"22","hashOfConfig":"13"},{"size":2252,"mtime":1632948456846,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"qdyajk",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"26"},"/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/index.js",[],["52","53"],"/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/App.js",["54","55"],"import React, { useState } from \"react\";\nimport './App.css';\n\n//BOOTSTRAP\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n//ROTAS\nimport Rotas from \"./rotas\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n//PROVIDER\nimport Provider from \"./servicos/context\"\n\n\n\nfunction App() {\n  const [token, setToken] = useState(\"He\")\n  return (\n    <Provider>\n      <Router>\n        <Rotas />\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/reportWebVitals.js",[],"/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/rotas/index.js",["56","57"],"import React, { useContext } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Context } from \"../servicos/context\";\n\n//PAGINAS\nimport Login from \"../paginas/Login\";\nimport EditarUsuario from \"../paginas/EditarUsuario\";\nimport CriarUsuario from \"../paginas/CriarUsuario\";\nimport Principal from \"../paginas/Principal\";\n\nexport default function Rotas() {\n  const context = useContext(Context);\n  const Unathorized = () => <div>Fa√ßa o login primeiro :)</div>\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Login} />\n\n      <Route exact path=\"/principal\" component={context.infos.token != \"\" ? Principal : Unathorized} />\n      <Route exact path=\"/editar\" component={context.infos.token != \"\" ? EditarUsuario : Unathorized} />\n      <Route exact path=\"/criar\" component={CriarUsuario} />\n\n    </Switch>\n  )\n}\n","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/servicos/context/index.js",[],"/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/paginas/Login/index.js",["58","59","60"],"/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/paginas/Principal/index.js",["61","62","63","64"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { Container, Row, Col, ListGroup, Form, Button } from \"react-bootstrap\"\nimport { useHistory } from \"react-router-dom\"\nimport { Context } from \"../../servicos/context\"\n\n//FONT AWESOME ICONS\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlusCircle, faTrash, faDoorOpen } from '@fortawesome/free-solid-svg-icons'\n\n//API\nimport API from \"../../servicos/api\";\n\n//MODALS\nimport { AddListModal } from \"./modal\";\n\nconst Principal = () => {\n\n  const informations = useContext(Context)\n  const [lists, setLists] = useState(informations.infos.lists)\n  const [newItem, setNewItem] = useState(\"\")\n  const [editingItem, setEditingItem] = useState({})\n  const [editingMode, setEditingMode] = useState(false)\n  const [update, setUpdate] = useState(false)\n  const [selectedList, setSelectedList] = useState({\n      id: 0,\n      name: \"\",\n      user_id: null,\n      items_quantity: null,\n      items: []\n    })\n  const [showListModal, setShowListModal] = useState(false);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    (\n      async function update(){\n        await API.get(`lists/${informations.infos.id}`,{\n          headers: {\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Authorization\": `Bearer ${informations.infos.token}`\n        }})\n        .then((response)=>{\n          setLists(response.data.lists)\n          console.log(response.data)\n          response.data.lists.map((list)=>{\n            if(list.id == selectedList.id){\n              setSelectedList(list)\n            }\n          })\n        })\n        .catch((err)=>console.log(err))\n      }\n    )()\n  }, [update])\n\n\n\n  function modalListClose(value){\n    setShowListModal(false);\n    setUpdate(!update)\n  }\n\n  async function addItem() {\n\n    let item = {\n      name: newItem,\n      type:\"item\",\n      list_id:selectedList.id\n    }\n\n    await API.post(\"item\", item, {\n      headers: {\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Authorization\": `Bearer ${informations.infos.token}`\n    }})\n      .then((response) => {\n      setNewItem(\"\")\n      setUpdate(!update)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n\n  }\n\n  async function deleteItem(item){\n    let payload = {\n      done: item.done? 1:0,\n      flavor: item.flavor,\n      item_id: item.id,\n      list_id: item.list_id,\n      name: item.name,\n      type: item.type\n    }\n\n    await API.delete(\"item\", {\n      headers: {\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Authorization\": `Bearer ${informations.infos.token}`,\n    },\n    data: payload\n  } )\n    .then(()=>setUpdate(!update))\n    .catch((err)=> console.log(err))\n\n    }\n\n  async function updateItem(){\n    let item ={\n      name: newItem,\n      flavor: editingItem.flavor,\n      type: editingItem.type,\n      item_id: editingItem.id,\n      list_id: editingItem.list_id,\n      done: editingItem.done? 1:0\n    }\n    console.log(item)\n    await API.put(\"item\",item,{\n      headers: {\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Authorization\": `Bearer ${informations.infos.token}`\n    }})\n    .then((response)=>{\n      setUpdate(!update)\n      setNewItem(\"\")\n      setEditingMode(false)\n      setEditingItem({id:0})\n    })\n    .catch((err)=>console.log(err))\n\n  }\n\n  function startEditingMode(item){\n    setEditingItem(item)\n    setNewItem(item.name)\n    setEditingMode(true)\n  }\n\n  return (\n    <Container fluid style={{ fontFamily: \"Courier New\" }}>\n    {showListModal? <AddListModal show={true} user_id={informations.infos.id} close={modalListClose} token={informations.infos.token}/>:\"\"}\n\n      <Row style={{ marginTop: 20, boxShadow: \"0px 3px rgb(0,0,0,0.1)\" }}>\n        <Col className=\"d-flex justify-content-start\" style={{ fontSize: 18, marginBottom: 12 }}>Bem-vindo, {informations.infos.name}! ;)</Col>\n        <Col className=\"d-flex justify-content-end\" ><FontAwesomeIcon icon={faDoorOpen} onClick={() => history.push(\"/\")} /></Col>\n      </Row>\n\n      <Row style={{ marginTop: 30 }} md={12}>\n        <Col md={4}>\n          <div style={{\n            width: 330,\n            height: \"100%\",\n            padding: 20,\n\n          }}>\n            <Row style={{ marginBottom: 10 }} >\n              <Col style={{ fontSize: 24, color: \"white\", backgroundColor: \"#DE989A\", borderRadius: 10 }}>Listas</Col>\n            </Row>\n\n            <Row>\n              {informations.infos.lists.length > 0 ?\n                <ListGroup variant=\"flush\">\n                  {\n                    lists.map((list, index) =>\n                      <ListGroup.Item key={index} onClick={()=>setSelectedList(list)}>{list.name}</ListGroup.Item>\n                    )\n                  }\n                </ListGroup>\n                :\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item action>Vamos come√ßar?! Clique em <FontAwesomeIcon icon={faPlusCircle} size=\"xs\" color=\"#75903E\" /> </ListGroup.Item>\n                </ListGroup>\n              }\n            </Row>\n            <Row style={{ marginBottom: 10 }}>\n              <Col className=\"d-flex justify-content-center\" onClick={()=>setShowListModal(true)}>\n              <FontAwesomeIcon icon={faPlusCircle} size=\"lg\" color=\"#75903E\" />\n              </Col>\n            </Row>\n          </div>\n        </Col>\n\n        <Col style={{ height: window.innerHeight * (0.8) }}>\n          <div style={{\n            width: \"70%\",\n            height: \"100%\",\n            padding: 20,\n            border: \"solid\",\n            borderRadius: 20,\n            borderWidth: \"1px\",\n            boxShadow: \"5px 3px gray\",\n            borderColor: \"#E7E7E7\"\n          }}>\n            <Row style={{ marginBottom: 20 }} >\n              <Col style={{ fontSize: 24, color: \"white\", backgroundColor: \"#A799B7\", borderRadius: 10 }}>Items da lista {selectedList?.name}</Col>\n            </Row>\n\n            <Row>\n            <Col>\n              <Form onSubmit={(e)=>e.preventDefault()}>\n                <Row>\n                <Col md={9}>\n                  <Form.Control\n                  type=\"text\"\n                  style={{borderRadius:10}}\n                  value={newItem}\n                  onChange={(e)=>setNewItem(e.target.value)}\n                  />\n                  </Col>\n                  <Col>\n                  <Button\n                  type=\"submit\"\n                  style={{\n                    backgroundColor: \"#DE989A\",\n                    border: \"#DE989A\",\n                    borderRadius: 10,\n                  }}\n                  onClick={(e)=>{\n                    if(editingMode){\n                      updateItem()\n                    }else{\n                    addItem()\n                    }\n                  }}\n                  >{editingMode?\"Salvar\":\"Adicionar\"}</Button>\n                  </Col>\n                  </Row>\n\n\n              </Form>\n              </Col>\n\n            </Row>\n\n            <ListGroup variant=\"flush\" style={{ marginTop:20 }}>\n            {selectedList?.items.map((item, index)=>\n              <ListGroup.Item style={{ marginBottom: 10 }} key={index}>\n              <Row>\n              <Col md={1}><Form.Check tyle=\"checkbox\"/></Col>\n                <Col onClick={()=>startEditingMode(item)}>{item.name}{editingItem.id == item.id?\" (Editando)\":\"\"}</Col>\n                <Col className=\"d-flex justify-content-end\" onClick={()=>deleteItem(item)} ><FontAwesomeIcon icon = { faTrash }/></Col>\n              </Row>\n              </ListGroup.Item>\n            )\n            }\n            </ListGroup>\n          </div>\n        </Col>\n\n      </Row>\n    </Container >\n  )\n\n}\n\nexport default Principal;\n","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/paginas/CriarUsuario/index.js",["65","66","67","68","69","70","71","72"],"/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/paginas/EditarUsuario/index.js",["73","74"],"import React, { useState, useEffect } from \"react\";\n\nconst EditarUsuario = () => {\n\n  const [message, setMessage] = useState(\"Hello World\");\n\n  return (\n    <div class=\"row\">\n      {message}\n    </div>\n  )\n\n}\n\nexport default EditarUsuario;\n","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/servicos/api/index.js",[],"/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/paginas/Principal/modal.js",["75","76"],"import React, { useState } from \"react\";\nimport { Row, Col, Button, Modal, Form } from \"react-bootstrap\";\n\nimport API from \"../../servicos/api\";\n\nexport const AddListModal = (props) => {\n  const [list, setList] = useState({ name: \"\", user_id: props.user_id })\n\n  async function createList() {\n\n    await API.post(\"/list\", list, {\n      headers: {\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Authorization\": `Bearer ${props.token}`\n    }})\n      .then((response) => {\n        props.close()\n\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  return (\n    <Modal show={true} style={{ borderRadius:10, borderWidth:2 }} onHide={()=> props.close()} >\n      <Modal.Header closeButton>\n\n      </Modal.Header>\n      <Modal.Body>\n          <Form onSubmit={(e)=>e.preventDefault()}>\n            <Form.Group>\n              <Form.Label>Nome da lista</Form.Label>\n                <Form.Control\n                style={{\n                 borderColor: \"#DE989A\",\n                 borderWidht: \"1.5px\",\n                 outline: \"none\"\n               }}\n                type=\"text\"\n                onChange={(e)=>setList({...list,name: e.target.value})}\n                />\n            </Form.Group>\n            <Row>\n            <Col>\n            <Button\n              type=\"submit\"\n              style={{\n                backgroundColor: \"#DE989A\",\n                border: \"#DE989A\",\n                borderRadius: 10,\n                marginTop:20\n              }}\n              onClick={()=>createList()}\n            >\n              Feito!\n            </Button>\n            </Col>\n            </Row>\n          </Form>\n      </Modal.Body>\n\n    </Modal>\n  )\n}\n\nexport const AddItemList = (props) => {\n  const [list, setList] = useState({ name: \"\", user_id: null })\n\n  return (\n    <Modal show={props.show}>\n      <Modal.Header closeButton>\n        <Modal.Title>Modal heading</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\">\n          Close\n          </Button>\n        <Button variant=\"primary\">\n          Save Changes\n          </Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n",{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":16,"column":10,"nodeType":"83","messageId":"84","endLine":16,"endColumn":15},{"ruleId":"81","severity":1,"message":"85","line":16,"column":17,"nodeType":"83","messageId":"84","endLine":16,"endColumn":25},{"ruleId":"86","severity":1,"message":"87","line":18,"column":69,"nodeType":"88","messageId":"89","endLine":18,"endColumn":71},{"ruleId":"86","severity":1,"message":"87","line":19,"column":66,"nodeType":"88","messageId":"89","endLine":19,"endColumn":68},{"ruleId":"90","severity":1,"message":"91","line":21,"column":50,"nodeType":"92","endLine":21,"endColumn":52,"suggestions":"93"},{"ruleId":"86","severity":1,"message":"94","line":26,"column":18,"nodeType":"88","messageId":"89","endLine":26,"endColumn":20},{"ruleId":"86","severity":1,"message":"94","line":29,"column":25,"nodeType":"88","messageId":"89","endLine":29,"endColumn":27},{"ruleId":"95","severity":1,"message":"96","line":47,"column":41,"nodeType":"97","messageId":"98","endLine":47,"endColumn":43},{"ruleId":"86","severity":1,"message":"94","line":48,"column":24,"nodeType":"88","messageId":"89","endLine":48,"endColumn":26},{"ruleId":"90","severity":1,"message":"99","line":56,"column":6,"nodeType":"92","endLine":56,"endColumn":14,"suggestions":"100"},{"ruleId":"86","severity":1,"message":"94","line":245,"column":86,"nodeType":"88","messageId":"89","endLine":245,"endColumn":88},{"ruleId":"81","severity":1,"message":"101","line":1,"column":27,"nodeType":"83","messageId":"84","endLine":1,"endColumn":36},{"ruleId":"81","severity":1,"message":"102","line":14,"column":10,"nodeType":"83","messageId":"84","endLine":14,"endColumn":17},{"ruleId":"81","severity":1,"message":"103","line":14,"column":19,"nodeType":"83","messageId":"84","endLine":14,"endColumn":29},{"ruleId":"86","severity":1,"message":"94","line":23,"column":14,"nodeType":"88","messageId":"89","endLine":23,"endColumn":16},{"ruleId":"86","severity":1,"message":"94","line":26,"column":25,"nodeType":"88","messageId":"89","endLine":26,"endColumn":27},{"ruleId":"86","severity":1,"message":"94","line":29,"column":25,"nodeType":"88","messageId":"89","endLine":29,"endColumn":27},{"ruleId":"86","severity":1,"message":"87","line":32,"column":25,"nodeType":"88","messageId":"89","endLine":32,"endColumn":27},{"ruleId":"86","severity":1,"message":"94","line":42,"column":33,"nodeType":"88","messageId":"89","endLine":42,"endColumn":35},{"ruleId":"81","severity":1,"message":"101","line":1,"column":27,"nodeType":"83","messageId":"84","endLine":1,"endColumn":36},{"ruleId":"81","severity":1,"message":"103","line":5,"column":19,"nodeType":"83","messageId":"84","endLine":5,"endColumn":29},{"ruleId":"81","severity":1,"message":"104","line":69,"column":10,"nodeType":"83","messageId":"84","endLine":69,"endColumn":14},{"ruleId":"81","severity":1,"message":"105","line":69,"column":16,"nodeType":"83","messageId":"84","endLine":69,"endColumn":23},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'token' is assigned a value but never used.","Identifier","unusedVar","'setToken' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'informations'. Either include it or remove the dependency array.","ArrayExpression",["108"],"Expected '===' and instead saw '=='.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'informations.infos.id', 'informations.infos.token', and 'selectedList.id'. Either include them or remove the dependency array.",["109"],"'useEffect' is defined but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'list' is assigned a value but never used.","'setList' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},"Update the dependencies array to be: [informations]",{"range":"114","text":"115"},"Update the dependencies array to be: [informations.infos.id, informations.infos.token, selectedList.id, update]",{"range":"116","text":"117"},[589,591],"[informations]",[1720,1728],"[informations.infos.id, informations.infos.token, selectedList.id, update]"]
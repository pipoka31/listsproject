[{"/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/index.js":"1","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/App.js":"2","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/reportWebVitals.js":"3","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/rotas/index.js":"4","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/servicos/context/index.js":"5","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/paginas/Login/index.js":"6","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/paginas/Principal/index.js":"7","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/paginas/CriarUsuario/index.js":"8","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/paginas/EditarUsuario/index.js":"9","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/servicos/api/index.js":"10","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/paginas/Principal/modal.js":"11"},{"size":500,"mtime":1632508264272,"results":"12","hashOfConfig":"13"},{"size":454,"mtime":1632587553615,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1632508264274,"results":"15","hashOfConfig":"13"},{"size":845,"mtime":1632592226225,"results":"16","hashOfConfig":"13"},{"size":371,"mtime":1632588879003,"results":"17","hashOfConfig":"13"},{"size":3684,"mtime":1633517514587,"results":"18","hashOfConfig":"13"},{"size":8281,"mtime":1633527842019,"results":"19","hashOfConfig":"13"},{"size":4705,"mtime":1633517685666,"results":"20","hashOfConfig":"13"},{"size":240,"mtime":1632510337581,"results":"21","hashOfConfig":"13"},{"size":246,"mtime":1632669593854,"results":"22","hashOfConfig":"13"},{"size":2252,"mtime":1632948456846,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"qdyajk",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"26"},"/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/index.js",[],["53","54"],"/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/App.js",["55","56"],"import React, { useState } from \"react\";\nimport './App.css';\n\n//BOOTSTRAP\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n//ROTAS\nimport Rotas from \"./rotas\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n//PROVIDER\nimport Provider from \"./servicos/context\"\n\n\n\nfunction App() {\n  const [token, setToken] = useState(\"He\")\n  return (\n    <Provider>\n      <Router>\n        <Rotas />\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/reportWebVitals.js",[],"/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/rotas/index.js",["57","58"],"import React, { useContext } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Context } from \"../servicos/context\";\n\n//PAGINAS\nimport Login from \"../paginas/Login\";\nimport EditarUsuario from \"../paginas/EditarUsuario\";\nimport CriarUsuario from \"../paginas/CriarUsuario\";\nimport Principal from \"../paginas/Principal\";\n\nexport default function Rotas() {\n  const context = useContext(Context);\n  const Unathorized = () => <div>Faça o login primeiro :)</div>\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Login} />\n\n      <Route exact path=\"/principal\" component={context.infos.token != \"\" ? Principal : Unathorized} />\n      <Route exact path=\"/editar\" component={context.infos.token != \"\" ? EditarUsuario : Unathorized} />\n      <Route exact path=\"/criar\" component={CriarUsuario} />\n\n    </Switch>\n  )\n}\n","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/servicos/context/index.js",[],"/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/paginas/Login/index.js",["59","60","61"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { Col, Row, Container, Form, Button } from \"react-bootstrap\";\n\n//UseHistory\nimport { useHistory, Link } from \"react-router-dom\";\nimport { Context } from \"../../servicos/context\"\n\n//API\nimport API from \"../../servicos/api\";\n\n\nconst Login = () => {\n\n  const history = useHistory();\n  const informations = useContext(Context)\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [feedback, setFeedback] = useState(\"\");\n\n  useEffect(() => { console.log(informations) }, [])\n\n\n  async function processLogin() {\n\n    if (username == \"\") {\n      setFeedback(\"Preencha o nome de usuário, por favor\")\n      return\n    } else if (password == \"\") {\n      setFeedback(\"Preencha a senha, por favor\")\n      return\n    }\n\n    await API.post(\"login\", { username: username, password: password })\n      .then((response) => {\n        informations.setInfos({\n          ...informations.infos,\n          token: response.data.token,\n          name: response.data.user.name,\n          id: response.data.user.id,\n          lists: response.data.user.lists\n        })\n        history.push(\"/principal\");\n      })\n      .catch((err) => {\n        console.log(err)\n        setFeedback(\"Desculpe, não encontramos seu login :l\")\n      })\n\n  }\n\n  return (\n    <Container fluid style={{ fontFamily: \"Courier New\" }}>\n\n      <Row style={{ marginTop: window.innerHeight * (0.2) }}>\n        <Col className=\"d-flex justify-content-center\"\n          style={{\n            fontFamily: \"Courier New\",\n            fontSize: 24,\n            color: \"#95AF5F\",\n            fontWeight: \"bolder\"\n          }}>\n          Lists\n        </Col>\n      </Row>\n\n\n      <Row>\n        <Col className=\"d-flex justify-content-center\">\n          <div style={{\n            border: \"solid\",\n            padding: 20,\n            borderRadius: 5,\n            borderWidth: \"1.5px\",\n            margin: 5,\n            boxShadow: \"5px 3px 0px 0px\"\n          }}>\n            <p style={{ fontSize: 12 }}>{feedback}</p>\n              <Form onSubmit={(e)=> e.preventDefault()} >\n\n              <Form.Group style={{marginBottom:10}}>\n                <Form.Control placeholder=\"Usuário\" style={{\n                  borderColor: \"#DE989A\",\n                  borderWidht: \"1.5px\",\n                  width: 280,\n                  outline: \"none\"\n                }}\n                  onChange={(e) => setUsername(e.target.value)}\n                />\n              </Form.Group>\n\n              <Form.Group style={{marginBottom:10}}>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Senha\"\n                  style={{\n                    borderColor: \"#DE989A\",\n                    borderWidht: \"1.5px\",\n                    width: 280,\n                    outline: \"none\"\n                  }}\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </Form.Group>\n\n              <Button\n                block\n                type=\"submit\"\n                style={{\n                  backgroundColor: \"#DE989A\",\n                  border: \"#DE989A\",\n                  borderRadius: 10,\n                  width: 280\n                }}\n                onClick={() => processLogin()}\n              >\n                Vamos lá\n              </Button>\n\n            </Form>\n\n            <p\n              style={{ fontSize: 11, marginTop: 20, textAlign: \"center\" }}\n            >Como assim você ainda não tem uma conta??<br /> <Link to=\"/criar\">Crie agora</Link></p>\n\n          </div>\n        </Col>\n      </Row>\n\n    </Container >\n  )\n\n}\n\nexport default Login;\n","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/paginas/Principal/index.js",["62","63","64","65","66","67"],"/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/paginas/CriarUsuario/index.js",["68","69","70","71","72","73","74","75"],"import React, { useState, useEffect } from \"react\";\nimport { Col, Row, Container, Form, Button } from \"react-bootstrap\";\n\n//UseHistory\nimport { useHistory, Link } from \"react-router-dom\";\n\n//API\nimport API from \"../../servicos/api\";\n\nconst CriarUsuario = () => {\n\n  const history = useHistory()\n\n  const [message, setMessage] = useState(\"Hello World\");\n  const [name, setName] = useState(\"\")\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\")\n  const [passwordAgain, setPasswordAgain] = useState(\"\")\n  const [feedback, setFeedback] = useState(\"\")\n\n  async function createUser() {\n\n    if (name == \"\") {\n      setFeedback(\"Preencha o seu nome, por favor\")\n      return\n    } else if (username == \"\") {\n      setFeedback(\"Preencha o nome de usuário, por favor\")\n      return\n    } else if (password == \"\") {\n      setFeedback(\"Preencha a senha, por favor\")\n      return\n    } else if (password != passwordAgain) {\n      setFeedback(\"As senhas são diferentes\")\n      return\n    }\n    console.log(\"chegou\")\n    await API.post(\"user\", { name: name, username: username, password: password })\n      .then(() => {\n        history.push(\"/\");\n      })\n      .catch((err) => {\n        if (err.reponse.message == \"User already exists\") {\n          setFeedback(\"Usuário já existe\")\n        } else {\n          setFeedback(\"Ocorreu um erro, tente mais tarde :l\")\n        }\n      })\n  }\n\n  return (\n    <Container fluid style={{ fontFamily: \"Courier New\" }}>\n\n\n\n      <Row style={{ marginTop: window.innerHeight * (0.2) }}>\n        <Col className=\"d-flex justify-content-center\"\n          style={{\n            fontFamily: \"Courier New\",\n            fontSize: 24,\n            color: \"#95AF5F\",\n            fontWeight: \"bolder\"\n          }}>\n          Lists\n        </Col>\n      </Row>\n\n\n      <Row>\n        <Col className=\"d-flex justify-content-center\">\n          <div style={{\n            border: \"solid\",\n            padding: 20,\n            borderRadius: 5,\n            borderWidth: \"1.5px\",\n            margin: 5,\n            boxShadow: \"5px 3px 0px 0px\"\n          }}>\n            <p style={{ fontSize: 12 }}>{feedback}</p>\n            <Form onSubmit={(e)=> e.preventDefault()}>\n\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Control placeholder=\"Nome\" style={{\n                  borderColor: \"#DE989A\",\n                  borderWidht: \"1.5px\",\n                  width: 280,\n                  outline: \"none\"\n                }}\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Control placeholder=\"Usuário\" style={{\n                  borderColor: \"#DE989A\",\n                  borderWidht: \"1.5px\",\n                  width: 280,\n                  outline: \"none\"\n                }}\n                  onChange={(e) => setUsername(e.target.value)}\n                />\n\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Control\n                  placeholder=\"Senha...🤫\"\n                  type=\"password\"\n                  style={{\n                    borderColor: \"#DE989A\",\n                    borderWidht: \"1.5px\",\n                    width: 280,\n                    outline: \"none\"\n                  }}\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Control\n                  placeholder=\"Confirme a senha\"\n                  type=\"password\"\n                  style={{\n                    borderColor: \"#DE989A\",\n                    borderWidht: \"1.5px\",\n                    width: 280,\n                    outline: \"none\"\n                  }}\n                  onChange={(e) => setPasswordAgain(e.target.value)}\n                />\n              </Form.Group>\n\n              <Button\n                type=\"submit\"\n                block\n                style={{\n                  backgroundColor: \"#DE989A\",\n                  border: \"#DE989A\",\n                  borderRadius: 10,\n                  width: 280\n                }}\n                onClick={() => createUser()}\n              >\n                Pronto para começar!\n              </Button>\n\n            </Form>\n\n            <p\n              style={{ fontSize: 11, marginTop: 20, textAlign: \"center\" }}\n            ><Link to=\"/\">Já tenho uma com usuário e tudo mais</Link></p>\n\n          </div>\n        </Col>\n      </Row>\n\n    </Container >\n  )\n\n}\n\nexport default CriarUsuario;\n","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/paginas/EditarUsuario/index.js",["76","77"],"import React, { useState, useEffect } from \"react\";\n\nconst EditarUsuario = () => {\n\n  const [message, setMessage] = useState(\"Hello World\");\n\n  return (\n    <div class=\"row\">\n      {message}\n    </div>\n  )\n\n}\n\nexport default EditarUsuario;\n","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/servicos/api/index.js",[],"/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/paginas/Principal/modal.js",["78","79"],"import React, { useState } from \"react\";\nimport { Row, Col, Button, Modal, Form } from \"react-bootstrap\";\n\nimport API from \"../../servicos/api\";\n\nexport const AddListModal = (props) => {\n  const [list, setList] = useState({ name: \"\", user_id: props.user_id })\n\n  async function createList() {\n\n    await API.post(\"/list\", list, {\n      headers: {\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Authorization\": `Bearer ${props.token}`\n    }})\n      .then((response) => {\n        props.close()\n\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  return (\n    <Modal show={true} style={{ borderRadius:10, borderWidth:2 }} onHide={()=> props.close()} >\n      <Modal.Header closeButton>\n\n      </Modal.Header>\n      <Modal.Body>\n          <Form onSubmit={(e)=>e.preventDefault()}>\n            <Form.Group>\n              <Form.Label>Nome da lista</Form.Label>\n                <Form.Control\n                style={{\n                 borderColor: \"#DE989A\",\n                 borderWidht: \"1.5px\",\n                 outline: \"none\"\n               }}\n                type=\"text\"\n                onChange={(e)=>setList({...list,name: e.target.value})}\n                />\n            </Form.Group>\n            <Row>\n            <Col>\n            <Button\n              type=\"submit\"\n              style={{\n                backgroundColor: \"#DE989A\",\n                border: \"#DE989A\",\n                borderRadius: 10,\n                marginTop:20\n              }}\n              onClick={()=>createList()}\n            >\n              Feito!\n            </Button>\n            </Col>\n            </Row>\n          </Form>\n      </Modal.Body>\n\n    </Modal>\n  )\n}\n\nexport const AddItemList = (props) => {\n  const [list, setList] = useState({ name: \"\", user_id: null })\n\n  return (\n    <Modal show={props.show}>\n      <Modal.Header closeButton>\n        <Modal.Title>Modal heading</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\">\n          Close\n          </Button>\n        <Button variant=\"primary\">\n          Save Changes\n          </Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n",{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":16,"column":10,"nodeType":"86","messageId":"87","endLine":16,"endColumn":15},{"ruleId":"84","severity":1,"message":"88","line":16,"column":17,"nodeType":"86","messageId":"87","endLine":16,"endColumn":25},{"ruleId":"89","severity":1,"message":"90","line":18,"column":69,"nodeType":"91","messageId":"92","endLine":18,"endColumn":71},{"ruleId":"89","severity":1,"message":"90","line":19,"column":66,"nodeType":"91","messageId":"92","endLine":19,"endColumn":68},{"ruleId":"93","severity":1,"message":"94","line":21,"column":50,"nodeType":"95","endLine":21,"endColumn":52,"suggestions":"96"},{"ruleId":"89","severity":1,"message":"97","line":26,"column":18,"nodeType":"91","messageId":"92","endLine":26,"endColumn":20},{"ruleId":"89","severity":1,"message":"97","line":29,"column":25,"nodeType":"91","messageId":"92","endLine":29,"endColumn":27},{"ruleId":"93","severity":1,"message":"98","line":39,"column":7,"nodeType":"95","endLine":39,"endColumn":9,"suggestions":"99"},{"ruleId":"89","severity":1,"message":"97","line":51,"column":35,"nodeType":"91","messageId":"92","endLine":51,"endColumn":37},{"ruleId":"100","severity":1,"message":"101","line":56,"column":41,"nodeType":"102","messageId":"103","endLine":56,"endColumn":43},{"ruleId":"89","severity":1,"message":"97","line":57,"column":24,"nodeType":"91","messageId":"92","endLine":57,"endColumn":26},{"ruleId":"93","severity":1,"message":"104","line":65,"column":6,"nodeType":"95","endLine":65,"endColumn":14,"suggestions":"105"},{"ruleId":"89","severity":1,"message":"97","line":260,"column":93,"nodeType":"91","messageId":"92","endLine":260,"endColumn":95},{"ruleId":"84","severity":1,"message":"106","line":1,"column":27,"nodeType":"86","messageId":"87","endLine":1,"endColumn":36},{"ruleId":"84","severity":1,"message":"107","line":14,"column":10,"nodeType":"86","messageId":"87","endLine":14,"endColumn":17},{"ruleId":"84","severity":1,"message":"108","line":14,"column":19,"nodeType":"86","messageId":"87","endLine":14,"endColumn":29},{"ruleId":"89","severity":1,"message":"97","line":23,"column":14,"nodeType":"91","messageId":"92","endLine":23,"endColumn":16},{"ruleId":"89","severity":1,"message":"97","line":26,"column":25,"nodeType":"91","messageId":"92","endLine":26,"endColumn":27},{"ruleId":"89","severity":1,"message":"97","line":29,"column":25,"nodeType":"91","messageId":"92","endLine":29,"endColumn":27},{"ruleId":"89","severity":1,"message":"90","line":32,"column":25,"nodeType":"91","messageId":"92","endLine":32,"endColumn":27},{"ruleId":"89","severity":1,"message":"97","line":42,"column":33,"nodeType":"91","messageId":"92","endLine":42,"endColumn":35},{"ruleId":"84","severity":1,"message":"106","line":1,"column":27,"nodeType":"86","messageId":"87","endLine":1,"endColumn":36},{"ruleId":"84","severity":1,"message":"108","line":5,"column":19,"nodeType":"86","messageId":"87","endLine":5,"endColumn":29},{"ruleId":"84","severity":1,"message":"109","line":69,"column":10,"nodeType":"86","messageId":"87","endLine":69,"endColumn":14},{"ruleId":"84","severity":1,"message":"110","line":69,"column":16,"nodeType":"86","messageId":"87","endLine":69,"endColumn":23},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'token' is assigned a value but never used.","Identifier","unusedVar","'setToken' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'informations'. Either include it or remove the dependency array.","ArrayExpression",["113"],"Expected '===' and instead saw '=='.","React Hook useEffect has a missing dependency: 'lists'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSelectedList' needs the current value of 'lists'.",["114"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'informations.infos.id', 'informations.infos.token', and 'selectedList.id'. Either include them or remove the dependency array.",["115"],"'useEffect' is defined but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'list' is assigned a value but never used.","'setList' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},"Update the dependencies array to be: [informations]",{"range":"122","text":"123"},"Update the dependencies array to be: [lists]",{"range":"124","text":"125"},"Update the dependencies array to be: [informations.infos.id, informations.infos.token, selectedList.id, update]",{"range":"126","text":"127"},[589,591],"[informations]",[1227,1229],"[lists]",[1962,1970],"[informations.infos.id, informations.infos.token, selectedList.id, update]"]
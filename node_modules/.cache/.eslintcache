[{"/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/index.js":"1","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/reportWebVitals.js":"2","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/App.js":"3","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/rotas/index.js":"4","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/servicos/context/index.js":"5","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/paginas/CriarUsuario/index.js":"6","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/paginas/EditarUsuario/index.js":"7","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/paginas/Principal/index.js":"8","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/paginas/Login/index.js":"9","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/paginas/Principal/modal.js":"10","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/servicos/api/index.js":"11","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/componentes/notepad/index.js":"12","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/componentes/editableNotepad/index.js":"13"},{"size":500,"mtime":1632508264272,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1632508264274,"results":"16","hashOfConfig":"15"},{"size":454,"mtime":1636142058691,"results":"17","hashOfConfig":"15"},{"size":880,"mtime":1636142058697,"results":"18","hashOfConfig":"15"},{"size":657,"mtime":1636142058698,"results":"19","hashOfConfig":"15"},{"size":4832,"mtime":1638132379001,"results":"20","hashOfConfig":"15"},{"size":5389,"mtime":1637351159584,"results":"21","hashOfConfig":"15"},{"size":6195,"mtime":1638134100727,"results":"22","hashOfConfig":"15"},{"size":3764,"mtime":1638132271373,"results":"23","hashOfConfig":"15"},{"size":3778,"mtime":1638133351160,"results":"24","hashOfConfig":"15"},{"size":246,"mtime":1638134246131,"results":"25","hashOfConfig":"15"},{"size":1546,"mtime":1636413427962,"results":"26","hashOfConfig":"15"},{"size":6431,"mtime":1638132369831,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"qdyajk",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},"/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/index.js",[],["63","64"],"/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/reportWebVitals.js",[],"/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/App.js",["65","66"],"import React, { useState } from \"react\";\nimport './App.css';\n\n//BOOTSTRAP\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n//ROTAS\nimport Rotas from \"./rotas\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n//PROVIDER\nimport Provider from \"./servicos/context\"\n\n\n\nfunction App() {\n  const [token, setToken] = useState(\"He\")\n  return (\n    <Router>\n      <Provider>\n        <Rotas />\n      </Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/rotas/index.js",[],"/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/servicos/context/index.js",[],"/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/paginas/CriarUsuario/index.js",["67","68","69","70","71","72"],"import React, { useState, useEffect } from \"react\";\nimport { Col, Row, Container, Form, Button } from \"react-bootstrap\";\n\n//UseHistory\nimport { useHistory, Link } from \"react-router-dom\";\n\n//API\nimport API from \"../../servicos/api\";\n\nconst CriarUsuario = () => {\n  const history = useHistory();\n\n  const [name, setName] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordAgain, setPasswordAgain] = useState(\"\");\n  const [feedback, setFeedback] = useState(\"\");\n\n  async function createUser() {\n    if (name == \"\") {\n      setFeedback(\"Preencha o seu nome, por favor\");\n      return;\n    } else if (username == \"\") {\n      setFeedback(\"Preencha o nome de usu치rio, por favor\");\n      return;\n    } else if (password == \"\") {\n      setFeedback(\"Preencha a senha, por favor\");\n      return;\n    } else if (password != passwordAgain) {\n      setFeedback(\"As senhas s칚o diferentes\");\n      return;\n    }\n    console.log(\"chegou\");\n    await API.post(\"user\", {\n      name: name,\n      username: username,\n      password: password,\n    })\n      .then(() => {\n        history.push(\"/\");\n      })\n      .catch((err) => {\n        if (err.reponse.message == \"User already exists\") {\n          setFeedback(\"Usu치rio j치 existe\");\n        } else {\n          setFeedback(\"Ocorreu um erro, tente mais tarde :l\");\n        }\n      });\n  }\n\n  return (\n    <Container fluid style={{ fontFamily: \"Courier New\" }}>\n      <Row style={{ marginTop: window.innerHeight * 0.2 }}>\n        <Col\n          className=\"d-flex justify-content-center\"\n          style={{\n            fontFamily: \"Courier New\",\n            fontSize: 24,\n            color: \"#95AF5F\",\n            fontWeight: \"bolder\",\n          }}\n        >\n          Lists\n        </Col>\n      </Row>\n\n      <Row>\n        <Col className=\"d-flex justify-content-center\">\n          <div\n            style={{\n              border: \"solid\",\n              padding: 20,\n              borderRadius: 5,\n              borderWidth: \"1.5px\",\n              margin: 5,\n              boxShadow: \"5px 3px 0px 0px\",\n            }}\n          >\n            <p style={{ fontSize: 12 }}>{feedback}</p>\n            <Form onSubmit={(e) => e.preventDefault()}>\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Control\n                  placeholder=\"Nome\"\n                  style={{\n                    borderColor: \"#DE989A\",\n                    borderWidht: \"1.5px\",\n                    width: 280,\n                    outline: \"none\",\n                  }}\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Control\n                  placeholder=\"Usu치rio\"\n                  style={{\n                    borderColor: \"#DE989A\",\n                    borderWidht: \"1.5px\",\n                    width: 280,\n                    outline: \"none\",\n                  }}\n                  onChange={(e) => setUsername(e.target.value)}\n                />\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Control\n                  placeholder=\"Senha...游뱖\"\n                  type=\"password\"\n                  style={{\n                    borderColor: \"#DE989A\",\n                    borderWidht: \"1.5px\",\n                    width: 280,\n                    outline: \"none\",\n                  }}\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Control\n                  placeholder=\"Confirme a senha\"\n                  type=\"password\"\n                  style={{\n                    borderColor: \"#DE989A\",\n                    borderWidht: \"1.5px\",\n                    width: 280,\n                    outline: \"none\",\n                  }}\n                  onChange={(e) => setPasswordAgain(e.target.value)}\n                />\n              </Form.Group>\n\n              <Button\n                type=\"submit\"\n                block\n                style={{\n                  backgroundColor: \"#DE989A\",\n                  border: \"#DE989A\",\n                  borderRadius: 10,\n                  width: 280,\n                }}\n                onClick={() => createUser()}\n              >\n                Pronto para come칞ar!\n              </Button>\n            </Form>\n\n            <p style={{ fontSize: 11, marginTop: 20, textAlign: \"center\" }}>\n              <Link to=\"/\">J치 tenho uma com usu치rio e tudo mais</Link>\n            </p>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default CriarUsuario;\n","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/paginas/EditarUsuario/index.js",["73","74","75","76","77","78","79","80","81","82","83"],"import React, { useState, useEffect } from \"react\";\nimport { Col, Row, Container, Form, Button } from \"react-bootstrap\";\n\n//FONT AWESOME ICONS\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlusCircle, faTrash, faDoorOpen, faSearch } from '@fortawesome/free-solid-svg-icons'\n\n//UseHistory\nimport { useHistory, Link } from \"react-router-dom\";\n\n//API\nimport API from \"../../servicos/api\";\n\nconst EditarUsuario = () => {\n\n  const history = useHistory()\n\n  const [message, setMessage] = useState(\"Hello World\");\n  const [name, setName] = useState(\"\")\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\")\n  const [passwordAgain, setPasswordAgain] = useState(\"\")\n  const [feedback, setFeedback] = useState(\"\")\n\n  async function updateUser() {\n\n    if (name == \"\") {\n      setFeedback(\"Preencha o seu nome, por favor\")\n      return\n    } else if (username == \"\") {\n      setFeedback(\"Preencha o nome de usu치rio, por favor\")\n      return\n    } else if (password == \"\") {\n      setFeedback(\"Preencha a senha, por favor\")\n      return\n    } else if (password != passwordAgain) {\n      setFeedback(\"As senhas s칚o diferentes\")\n      return\n    }\n    console.log(\"chegou\")\n    await API.post(\"user\", { name: name, username: username, password: password })\n      .then(() => {\n        history.push(\"/\");\n      })\n      .catch((err) => {\n        if (err.reponse.message == \"User already exists\") {\n          setFeedback(\"Usu치rio j치 existe\")\n        } else {\n          setFeedback(\"Ocorreu um erro, tente mais tarde :l\")\n        }\n      })\n  }\n\n  return (\n    <Container fluid style={{ fontFamily: \"Courier New\" }}>\n\n    <Row style={{ margin: 12, boxShadow: \"0px 3px 3px 3px rgb(0,0,0,0.1)\", borderRadius:10, padding:7 }}>\n      <Col className=\"d-flex justify-content-start\" style={{ fontSize:18, color:\"#75903E\", borderRadius:20 }}> List\n      {//<Row><small>Bem-vindo, {session?.name}! ;)</small></Row>\n      }\n      </Col>\n\n\n      <Col className=\"row justify-content-center\">\n        <input style={{\n          padding:3,\n          border:\"solid\",\n          borderColor: \"#DE989A\",\n          borderWidth:1.5,\n          outline:\"none\",\n          //backgroundColor:\"rgb(0,0,0,0.1)\",\n          borderRadius: 10,\n          width:\"100%\" }}/>\n\n      </Col>\n      <Col onClick={()=> history.push(\"/editar\")} >Editar perfil</Col>\n      <Col className=\"d-flex justify-content-end\" ><FontAwesomeIcon icon={faDoorOpen} onClick={()=>{}} /></Col>\n    </Row>\n\n\n      <Row>\n        <Col className=\"d-flex justify-content-center\">\n          <div style={{\n            border: \"solid\",\n            padding: 20,\n            borderRadius: 5,\n            borderWidth: \"1.5px\",\n            margin: 5,\n            boxShadow: \"5px 3px 0px 0px\"\n          }}>\n            <p style={{ fontSize: 12 }}>{feedback}</p>\n            <Form onSubmit={(e)=> e.preventDefault()}>\n\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Control placeholder=\"Nome\" style={{\n                  borderColor: \"#DE989A\",\n                  borderWidht: \"1.5px\",\n                  width: 280,\n                  outline: \"none\"\n                }}\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Control placeholder=\"Usu치rio\" style={{\n                  borderColor: \"#DE989A\",\n                  borderWidht: \"1.5px\",\n                  width: 280,\n                  outline: \"none\"\n                }}\n                  onChange={(e) => setUsername(e.target.value)}\n                />\n\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Control\n                  placeholder=\"Senha\"\n                  type=\"password\"\n                  style={{\n                    borderColor: \"#DE989A\",\n                    borderWidht: \"1.5px\",\n                    width: 280,\n                    outline: \"none\"\n                  }}\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Control\n                  placeholder=\"Confirme a senha\"\n                  type=\"password\"\n                  style={{\n                    borderColor: \"#DE989A\",\n                    borderWidht: \"1.5px\",\n                    width: 280,\n                    outline: \"none\"\n                  }}\n                  onChange={(e) => setPasswordAgain(e.target.value)}\n                />\n              </Form.Group>\n\n              <Button\n                type=\"submit\"\n                block\n                style={{\n                  backgroundColor: \"#DE989A\",\n                  border: \"#DE989A\",\n                  borderRadius: 10,\n                  width: 280\n                }}\n                onClick={() => updateUser()}\n              >\n                Pronto para come칞ar!\n              </Button>\n\n            </Form>\n\n            <p\n              style={{ fontSize: 11, marginTop: 20, textAlign: \"center\" }}\n            ><Link to=\"/\">J치 tenho uma com usu치rio e tudo mais</Link></p>\n\n          </div>\n        </Col>\n      </Row>\n\n    </Container >\n  )\n\n}\n\nexport default EditarUsuario;\n","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/paginas/Principal/index.js",["84","85","86","87","88","89","90","91","92"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { Container, Row, Col, ListGroup, Form, Button } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAuth } from \"../../servicos/context\";\n\n//FONT AWESOME ICONS\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlusCircle,\n  faDoorOpen\n} from \"@fortawesome/free-solid-svg-icons\";\n\n//API\nimport API from \"../../servicos/api\";\n\n//MODALS\nimport { AddListModal } from \"./modal\";\n\n//COMPONENTS\nimport Notepad from \"../../componentes/notepad\";\nimport EditableNotepad from \"../../componentes/editableNotepad\";\n\nconst Principal = () => {\n  const { session, setSession } = useAuth();\n  const [lists, setLists] = useState(session?.lists);\n  const [update, setUpdate] = useState(false);\n  const [selectedList, setSelectedList] = useState({\n    id: 0,\n    name: \"\",\n    user_id: null,\n    items_quantity: null,\n    items: [],\n  });\n  const [showListModal, setShowListModal] = useState(false);\n\n  const size = [4, 5, 3];\n\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!session) {\n      history.push(\"/\");\n    }\n  }, [session, history]);\n\n  useEffect(() => {\n    (async function update() {\n      await API.get(`lists/${session?.id}`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\",\n          Authorization: `Bearer ${session?.token}`,\n        },\n      })\n        .then((response) => {\n          if (response.data.length == 1) {\n            setSelectedList(response.data[0]);\n          }\n          setLists(response.data.lists);\n\n          response.data.lists.map((list) => {\n            if (list.id == selectedList.id) {\n              setSelectedList(list);\n            }\n          });\n        })\n        .catch((err) => console.log(err));\n    })();\n  }, [update]);\n\n  function modalListClose(value) {\n    setShowListModal(false);\n    setUpdate(!update);\n  }\n\n  async function addItem(newItem) {\n    let item = {\n      name: newItem,\n      type: \"item\",\n      list_id: selectedList.id,\n    };\n\n    await API.post(\"item\", item, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        Authorization: `Bearer ${session?.token}`,\n      },\n    })\n      .then((response) => {\n        setUpdate(!update);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  async function deleteItem(item) {\n    let payload = {\n      done: item.done ? 1 : 0,\n      flavor: item.flavor,\n      item_id: item.id,\n      list_id: item.list_id,\n      name: item.name,\n      type: item.type,\n    };\n\n    await API.delete(\"item\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        Authorization: `Bearer ${session?.token}`,\n      },\n      data: payload,\n    })\n      .then(() => setUpdate(!update))\n      .catch((err) => console.log(err));\n  }\n\n  async function updateItem(payload) {\n    \n    await API.put(\"item\", payload, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        Authorization: `Bearer ${session?.token}`,\n      },\n    })\n      .then((response) => {\n        setUpdate(!update);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function signOut() {\n    setSession(null);\n  }\n\n  function closeSelectedList() {\n    setSelectedList({\n      id: 0,\n      name: \"\",\n      user_id: null,\n      items_quantity: null,\n      items: [],\n    });\n    setUpdate(!update);\n  }\n\n  return (\n    <Container fluid style={{ fontFamily: \"Courier New\" }}>\n      {showListModal ? (\n        <AddListModal\n          show={true}\n          user_id={session?.id}\n          close={modalListClose}\n          token={session?.token}\n        />\n      ) : (\n        \"\"\n      )}\n\n      <Row\n        style={{\n          margin: 12,\n          boxShadow: \"0px 3px 3px 3px rgb(0,0,0,0.1)\",\n          borderRadius: 10,\n          padding: 7,\n        }}\n      >\n        <Col\n          className=\"d-flex justify-content-start\"\n          style={{ fontSize: 18, color: \"#75903E\", borderRadius: 20 }}\n        >\n          {\" \"}\n          Lists\n          {\n            //<Row><small>Bem-vindo, {session?.name}! ;)</small></Row>\n          }\n        </Col>\n\n        <Col className=\"d-flex justify-content-end\">\n          <FontAwesomeIcon\n            icon={faDoorOpen}\n            onClick={signOut}\n            style={{ margin: 5 }}\n          />\n        </Col>\n      </Row>\n\n      <Row style={{ marginTop: 7 }} md={12}>\n        {lists.length > 0 ? (\n          <Col md={12}>\n            <Row>\n              {selectedList.id === 0 ? (\n                <div>\n                  <Row style={{ marginBottom: 5 }}>\n                    <Col\n                      className=\"d-flex justify-content-center\"\n                      onClick={() => setShowListModal(true)}\n                    >\n                      <FontAwesomeIcon\n                        icon={faPlusCircle}\n                        size=\"lg\"\n                        color=\"#75903E\"\n                      />\n                    </Col>\n                  </Row>\n\n                  <Row>\n                    {lists.map((list, index) => (\n                      <Col\n                        md={list.is_notebook ? 6 : 3}\n                        onClick={() => {\n                          setSelectedList(list);\n                        }}\n                      >\n                        <Notepad notepad={list} />\n                      </Col>\n                    ))}\n                  </Row>\n                </div>\n              ) : (\n                <EditableNotepad\n                  close={closeSelectedList}\n                  selectedList={selectedList}\n                  deleteItem={deleteItem}\n                  updateItem={updateItem}\n                  addItem={addItem}\n                />\n              )}\n            </Row>\n          </Col>\n        ) : (\n          <AddListModal\n            show={true}\n            user_id={session?.id}\n            close={modalListClose}\n            token={session?.token}\n          />\n        )}\n      </Row>\n    </Container>\n  );\n};\n\nexport default Principal;\n","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/paginas/Login/index.js",["93","94","95"],"import React, { useState, useEffect } from \"react\";\nimport { Col, Row, Container, Form, Button } from \"react-bootstrap\";\n\n//UseHistory\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useAuth } from \"../../servicos/context\";\n\n//API\nimport API from \"../../servicos/api\";\n\nconst Login = () => {\n  const { session, setSession } = useAuth();\n  const history = useHistory();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [feedback, setFeedback] = useState(\"\");\n\n  useEffect(() => {\n    if (session) history.push(\"/principal\");\n  }, [session]);\n\n  async function processLogin() {\n    if (username == \"\") {\n      setFeedback(\"Preencha o nome de usu치rio, por favor\");\n      return;\n    } else if (password == \"\") {\n      setFeedback(\"Preencha a senha, por favor\");\n      return;\n    }\n\n    await API.post(\"login\", { username, password })\n      .then((response) => {\n        setSession({\n          token: response.data.token,\n          name: response.data.user.name,\n          id: response.data.user.id,\n          lists: response.data.user.lists,\n        });\n\n        history.push(\"/principal\");\n      })\n      .catch((err) => {\n        console.log(err);\n        setFeedback(\"Desculpe, n칚o encontramos seu login :l\");\n      });\n  }\n\n  return (\n    <Container fluid style={{ fontFamily: \"Courier New\" }}>\n      <Row style={{ marginTop: window.innerHeight * 0.2 }}>\n        <Col\n          className=\"d-flex justify-content-center\"\n          style={{\n            fontFamily: \"Courier New\",\n            fontSize: 24,\n            color: \"#95AF5F\",\n            fontWeight: \"bolder\",\n          }}\n        >\n          Lists\n        </Col>\n      </Row>\n\n      <Row>\n        <Col className=\"d-flex justify-content-center\">\n          <div\n            style={{\n              border: \"solid\",\n              padding: 20,\n              borderRadius: 5,\n              borderWidth: \"1.5px\",\n              margin: 5,\n              boxShadow: \"5px 3px 0px 0px\",\n            }}\n          >\n            <p style={{ fontSize: 12 }}>{feedback}</p>\n            <Form onSubmit={(e) => e.preventDefault()}>\n              <Form.Group style={{ marginBottom: 10 }}>\n                <Form.Control\n                  placeholder=\"Usu치rio\"\n                  style={{\n                    borderColor: \"#DE989A\",\n                    borderWidht: \"1.5px\",\n                    width: 280,\n                    outline: \"none\",\n                  }}\n                  onChange={(e) => setUsername(e.target.value)}\n                />\n              </Form.Group>\n\n              <Form.Group style={{ marginBottom: 10 }}>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Senha\"\n                  style={{\n                    borderColor: \"#DE989A\",\n                    borderWidht: \"1.5px\",\n                    width: 280,\n                    outline: \"none\",\n                  }}\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </Form.Group>\n\n              <Button\n                block\n                type=\"submit\"\n                style={{\n                  backgroundColor: \"#DE989A\",\n                  border: \"#DE989A\",\n                  borderRadius: 10,\n                  width: 280,\n                }}\n                onClick={() => processLogin()}\n              >\n                Vamos l치\n              </Button>\n            </Form>\n\n            <p style={{ fontSize: 11, marginTop: 20, textAlign: \"center\" }}>\n              Como assim voc칡 ainda n칚o tem uma conta??\n              <br /> <Link to=\"/criar\">Crie agora</Link>\n            </p>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Login;\n","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/paginas/Principal/modal.js",["96","97","98","99"],"import React, { useState } from \"react\";\nimport { Row, Col, Button, Modal, Form } from \"react-bootstrap\";\n\nimport API from \"../../servicos/api\";\n\nexport const AddListModal = (props) => {\n  const [list, setList] = useState({\n    name: \"\",\n    user_id: props.user_id,\n    is_notebook: 0,\n    color: \"#A799B7\",\n  });\n\n  const colors = [\n    \"#A799B7\",\n    \"#F6BD60\",\n    \"#F5CAC3\",\n    \"#F28482\",\n    \"#4D908E\",\n    \"#b5c99a\",\n    \"#ddbea9\",\n    \"#98c1d9\",\n    \"#ffb5a7\",\n    \"#f2b5d4\",\n  ];\n\n  async function createList() {\n\n    if(list.name !== \"\"){\n\n    await API.post(\"/list\", list, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        Authorization: `Bearer ${props.token}`,\n      },\n    })\n      .then((response) => {\n        props.close();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    }\n  }\n\n  function notebookCheck(value) {}\n\n  return (\n    <Modal\n      show={true}\n      style={{ borderRadius: 10, borderWidth: 2, fontFamily:\"Courier\" }}\n      onHide={() => props.close()}\n    >\n      <Modal.Body>\n        <Form onSubmit={(e) => e.preventDefault()}>\n          <Form.Group>\n            <Form.Label>Nome</Form.Label>\n            <Form.Control\n              style={{\n                borderColor: \"#DE989A\",\n                borderWidht: \"1.5px\",\n                outline: \"none\",\n              }}\n              type=\"text\"\n              onChange={(e) => setList({ ...list, name: e.target.value })}\n            />\n            <Form.Text className=\"text-muted\" style={{ fontSize:12 }}>\n            Campo obrigat칩rio\n            </Form.Text>\n          </Form.Group>\n\n          <Form.Group style={{ marginTop: 14 }}>\n            <Form.Check\n              type=\"checkbox\"\n              label=\"Caderno\"\n              isSelected={list.is_notebook === 1}\n              onClick={() => setList({ ...list, is_notebook: 1 })}\n            />\n            <Form.Check\n              type=\"checkbox\"\n              label=\"Lista\"\n              isSelected={list.is_notebook === 0}\n              default={true}\n              onClick={() => setList({ ...list, is_notebook: 0 })}\n            />\n          </Form.Group>\n\n          <Row style={{ marginTop:14 }}>\n            {colors.map((color) => (\n              <Col md={1}>\n                <div\n                  style={{\n                    borderRadius: 50,\n                    backgroundColor: color,\n                    marginTop: 10,\n                    width: 20,\n                    height: 25,\n                    border: list.color == color ? \"solid\" : \"none\",\n                    borderWidth: 1,\n                  }}\n                  onClick={() => setList({ ...list, color: color })}\n                ></div>\n              </Col>\n            ))}\n          </Row>\n\n          <Row>\n            <Col>\n              <Button\n                type=\"submit\"\n                style={{\n                  backgroundColor: \"#DE989A\",\n                  border: \"#DE989A\",\n                  borderRadius: 10,\n                  marginTop: 20,\n                }}\n                onClick={() => createList()}\n              >\n                Feito!\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport const AddItemList = (props) => {\n  const [list, setList] = useState({ name: \"\", user_id: null });\n\n  return (\n    <Modal show={props.show}>\n      <Modal.Header closeButton>\n        <Modal.Title>Modal heading</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\">Close</Button>\n        <Button variant=\"primary\">Save Changes</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/servicos/api/index.js",[],"/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/componentes/notepad/index.js",["100","101"],"import React from \"react\";\nimport { Row, Col, Form, Button, ListGroup } from \"react-bootstrap\";\n\nexport default function Notepad({ notepad }){\n\n  const list = notepad\n  const ground = \"#FDFDFD\"\n\n  function verifyItemNameSize(name){\n\n    if(notepad.is_notebook){\n\n      if(name.length > 100) return name.substring(0,100) +\" ...\"\n      return name\n\n\n    }else{\n\n      if(name.length > 10) return name.substring(0,10) +\" ...\"\n      return name\n\n    }\n\n  }\n\nreturn(\n  <Col style={{ height:200, width:\"100%\", margin:10 }}>\n    <div style={{\n      width: \"95%\",\n      height: \"100%\",\n      backgroundColor:ground,\n      padding: 20,\n      border: \"solid\",\n      borderRadius: 20,\n      borderWidth: \"1px\",\n      boxShadow: \"5px 3px 0px 0px\",\n      //borderColor: \"#E7E7E7\"\n    }}>\n      <Row>\n        <Col style={{\n          fontSize: 24,\n          color: \"white\",\n          backgroundColor: notepad.color,\n          borderRadius: 10,\n          fontFamily: \"Courier New\" }}\n          >{list?.name.length > 14? list.name.substring(0,14) +\"...\":list.name}</Col>\n      </Row>\n\n      <ListGroup variant=\"flush\" style={{ marginTop: 7 }}>\n        {list.items.slice(0,3).map((item, index) =>\n\n          <ListGroup.Item style={{ marginBottom: 10, height:30,backgroundColor:ground, width:\"100%\" }} key={index}>\n            <Row>\n              <Col md={9} style={{ fontSize:14 }}>\n                {verifyItemNameSize(item.name)}\n              </Col>\n            </Row>\n          </ListGroup.Item>\n        )\n        }\n      </ListGroup>\n\n    </div>\n  </Col>\n)\n\n}\n","/Users/user/Documents/Faculdade/desenvolvimentoWeb/listsproject/src/componentes/editableNotepad/index.js",["102","103","104","105","106"],"import React, { useState } from \"react\";\nimport {  Row, Col, ListGroup, Form, Button } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTrash,\n  faArrowLeft\n} from \"@fortawesome/free-solid-svg-icons\";\nimport API from \"../../servicos/api\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAuth } from \"../../servicos/context\";\n\nexport default function EditableNotepad({\n  selectedList,\n  deleteItem,\n  addItem,\n  updateItem,\n  close,\n}) {\n  const [newItem, setNewItem] = useState(\"\");\n  const ground = \"#FDFDFD\";\n  const { session, setSession } = useAuth();\n\n  async function deleteList() {\n    await API.delete(\"/list\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        Authorization: `Bearer ${session?.token}`,\n      },\n      data: selectedList,\n    })\n      .then((response) => close())\n      .catch((err) => console.log(err));\n  }\n\n  return (\n    <Col\n      md={12}\n      style={{ height: window.innerHeight * 0.8, margin: 5 }}\n      className=\"row justify-content-center\"\n    >\n      <Row>\n        <Col>\n          <FontAwesomeIcon icon={faArrowLeft} onClick={() => close()} />\n        </Col>\n      </Row>\n      <div\n        style={{\n          width: \"90%\",\n          height: \"100%\",\n          backgroundColor: ground,\n          padding: 20,\n          border: \"solid\",\n          borderRadius: 10,\n          borderWidth: \"1.5px\",\n          boxShadow: \"5px 3px 0px 0px\",\n          overflow: \"scroll\",\n        }}\n      >\n        <Row\n          style={{\n            marginBottom: 10,\n            fontSize: 24,\n            color: \"white\",\n            backgroundColor: selectedList.color,\n            borderRadius: 10,\n            fontFamily: \"Courier New\",\n          }}\n        >\n          <Col>{selectedList.name}</Col>\n          <Col className=\"d-flex justify-content-end\">\n            <FontAwesomeIcon\n              icon={faTrash}\n              style={{ margin: 8, width: 20, height: 20 }}\n              onClick={() => deleteList()}\n            />\n          </Col>\n        </Row>\n\n        {!selectedList.is_notebook ? (\n          <Row>\n            <Col>\n              <Form onSubmit={(e) => e.preventDefault()}>\n                <Row>\n                  <Col md={10}>\n                    <Form.Control\n                      type=\"text\"\n                      style={{ borderRadius: 10, backgroundColor: ground }}\n                      value={newItem}\n                      onChange={(e) => {\n                        if (\n                          e.target.value != \"\" ||\n                          newItem.length > e.target.value.length\n                        )\n                          setNewItem(e.target.value);\n                      }}\n                    />\n                  </Col>\n                  <Col md={2}>\n                    <Button\n                      type=\"submit\"\n                      block\n                      style={{\n                        backgroundColor: selectedList.color,\n                        border: selectedList.color,\n                        borderRadius: 10,\n                      }}\n                      onClick={(e) => {\n                        if (newItem.length != 0) {\n                          addItem(newItem);\n                          setNewItem(\"\");\n                        }\n                      }}\n                    >\n                      Salvar\n                    </Button>\n                  </Col>\n                </Row>\n              </Form>\n            </Col>\n          </Row>\n        ) : (\n          \"\"\n        )}\n        {!selectedList.is_notebook ? (\n          <ListGroup variant=\"flush\" style={{ marginTop: 20 }}>\n            {selectedList?.items.map((item, index) => (\n              <ListGroup.Item\n                style={{ marginBottom: 10, backgroundColor: ground }}\n                key={index}\n              >\n                <Row>\n                  <Col md={1} xs={1}>\n                    <Form.Check\n                      checked={item.done}\n                      type=\"checkbox\"\n                      onClick={(e) =>\n                        updateItem({\n                          name: item.name,\n                          flavor: item.flavor,\n                          type: item.type,\n                          item_id: item.id,\n                          list_id: item.list_id,\n                          done: e.target.checked ? 1 : 0,\n                        })\n                      }\n                    />\n                  </Col>\n                  <Col md={9} xs={9}>\n                    <Form.Control\n                      style={{\n                        border: \"none\",\n                        outline: \"none\",\n                        backgroundColor: ground,\n                      }}\n                      defaultValue={item.name}\n                      onBlur={(e) => {\n                        updateItem({\n                          name: e.target.value,\n                          flavor: item.flavor,\n                          type: item.type,\n                          item_id: item.id,\n                          list_id: item.list_id,\n                          done: 0,\n                        });\n                      }}\n                    />\n                  </Col>\n                  <Col\n                    className=\"d-flex justify-content-end\"\n                    onClick={() => deleteItem(item)}\n                  >\n                    <FontAwesomeIcon icon={faTrash} />\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        ) : (\n          <Form.Control\n            as=\"textarea\"\n            defaultValue={selectedList.items[0]?.name}\n            style={{\n              outline: \"none\",\n              height: \"90%\",\n              border: \"none\",\n              backgroundColor: ground,\n            }}\n            onBlur={(e) =>\n              selectedList.items.length == 0\n                ? addItem(e.target.value)\n                : updateItem({\n                    name: e.target.value,\n                    flavor: selectedList.items[0].flavor,\n                    type: selectedList.items[0].type,\n                    item_id: selectedList.items[0].id,\n                    list_id: selectedList.items[0].list_id,\n                    done: 0,\n                  })\n            }\n          />\n        )}\n      </div>\n    </Col>\n  );\n}\n",{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":16,"column":10,"nodeType":"113","messageId":"114","endLine":16,"endColumn":15},{"ruleId":"111","severity":1,"message":"115","line":16,"column":17,"nodeType":"113","messageId":"114","endLine":16,"endColumn":25},{"ruleId":"111","severity":1,"message":"116","line":1,"column":27,"nodeType":"113","messageId":"114","endLine":1,"endColumn":36},{"ruleId":"117","severity":1,"message":"118","line":20,"column":14,"nodeType":"119","messageId":"120","endLine":20,"endColumn":16},{"ruleId":"117","severity":1,"message":"118","line":23,"column":25,"nodeType":"119","messageId":"120","endLine":23,"endColumn":27},{"ruleId":"117","severity":1,"message":"118","line":26,"column":25,"nodeType":"119","messageId":"120","endLine":26,"endColumn":27},{"ruleId":"117","severity":1,"message":"121","line":29,"column":25,"nodeType":"119","messageId":"120","endLine":29,"endColumn":27},{"ruleId":"117","severity":1,"message":"118","line":43,"column":33,"nodeType":"119","messageId":"120","endLine":43,"endColumn":35},{"ruleId":"111","severity":1,"message":"116","line":1,"column":27,"nodeType":"113","messageId":"114","endLine":1,"endColumn":36},{"ruleId":"111","severity":1,"message":"122","line":6,"column":10,"nodeType":"113","messageId":"114","endLine":6,"endColumn":22},{"ruleId":"111","severity":1,"message":"123","line":6,"column":24,"nodeType":"113","messageId":"114","endLine":6,"endColumn":31},{"ruleId":"111","severity":1,"message":"124","line":6,"column":45,"nodeType":"113","messageId":"114","endLine":6,"endColumn":53},{"ruleId":"111","severity":1,"message":"125","line":18,"column":10,"nodeType":"113","messageId":"114","endLine":18,"endColumn":17},{"ruleId":"111","severity":1,"message":"126","line":18,"column":19,"nodeType":"113","messageId":"114","endLine":18,"endColumn":29},{"ruleId":"117","severity":1,"message":"118","line":27,"column":14,"nodeType":"119","messageId":"120","endLine":27,"endColumn":16},{"ruleId":"117","severity":1,"message":"118","line":30,"column":25,"nodeType":"119","messageId":"120","endLine":30,"endColumn":27},{"ruleId":"117","severity":1,"message":"118","line":33,"column":25,"nodeType":"119","messageId":"120","endLine":33,"endColumn":27},{"ruleId":"117","severity":1,"message":"121","line":36,"column":25,"nodeType":"119","messageId":"120","endLine":36,"endColumn":27},{"ruleId":"117","severity":1,"message":"118","line":46,"column":33,"nodeType":"119","messageId":"120","endLine":46,"endColumn":35},{"ruleId":"111","severity":1,"message":"127","line":1,"column":38,"nodeType":"113","messageId":"114","endLine":1,"endColumn":48},{"ruleId":"111","severity":1,"message":"128","line":2,"column":31,"nodeType":"113","messageId":"114","endLine":2,"endColumn":40},{"ruleId":"111","severity":1,"message":"129","line":2,"column":42,"nodeType":"113","messageId":"114","endLine":2,"endColumn":46},{"ruleId":"111","severity":1,"message":"130","line":2,"column":48,"nodeType":"113","messageId":"114","endLine":2,"endColumn":54},{"ruleId":"111","severity":1,"message":"131","line":36,"column":9,"nodeType":"113","messageId":"114","endLine":36,"endColumn":13},{"ruleId":"117","severity":1,"message":"118","line":56,"column":36,"nodeType":"119","messageId":"120","endLine":56,"endColumn":38},{"ruleId":"132","severity":1,"message":"133","line":61,"column":42,"nodeType":"134","messageId":"135","endLine":61,"endColumn":44},{"ruleId":"117","severity":1,"message":"118","line":62,"column":25,"nodeType":"119","messageId":"120","endLine":62,"endColumn":27},{"ruleId":"136","severity":1,"message":"137","line":69,"column":6,"nodeType":"138","endLine":69,"endColumn":14,"suggestions":"139"},{"ruleId":"136","severity":1,"message":"140","line":21,"column":6,"nodeType":"138","endLine":21,"endColumn":15,"suggestions":"141"},{"ruleId":"117","severity":1,"message":"118","line":24,"column":18,"nodeType":"119","messageId":"120","endLine":24,"endColumn":20},{"ruleId":"117","severity":1,"message":"118","line":27,"column":25,"nodeType":"119","messageId":"120","endLine":27,"endColumn":27},{"ruleId":"111","severity":1,"message":"142","line":47,"column":12,"nodeType":"113","messageId":"114","endLine":47,"endColumn":25},{"ruleId":"117","severity":1,"message":"118","line":99,"column":40,"nodeType":"119","messageId":"120","endLine":99,"endColumn":42},{"ruleId":"111","severity":1,"message":"143","line":131,"column":10,"nodeType":"113","messageId":"114","endLine":131,"endColumn":14},{"ruleId":"111","severity":1,"message":"144","line":131,"column":16,"nodeType":"113","messageId":"114","endLine":131,"endColumn":23},{"ruleId":"111","severity":1,"message":"129","line":2,"column":20,"nodeType":"113","messageId":"114","endLine":2,"endColumn":24},{"ruleId":"111","severity":1,"message":"130","line":2,"column":26,"nodeType":"113","messageId":"114","endLine":2,"endColumn":32},{"ruleId":"111","severity":1,"message":"145","line":9,"column":10,"nodeType":"113","messageId":"114","endLine":9,"endColumn":20},{"ruleId":"111","severity":1,"message":"146","line":21,"column":20,"nodeType":"113","messageId":"114","endLine":21,"endColumn":30},{"ruleId":"117","severity":1,"message":"121","line":92,"column":42,"nodeType":"119","messageId":"120","endLine":92,"endColumn":44},{"ruleId":"117","severity":1,"message":"121","line":109,"column":44,"nodeType":"119","messageId":"120","endLine":109,"endColumn":46},{"ruleId":"117","severity":1,"message":"118","line":190,"column":41,"nodeType":"119","messageId":"120","endLine":190,"endColumn":43},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"no-unused-vars","'token' is assigned a value but never used.","Identifier","unusedVar","'setToken' is assigned a value but never used.","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'faPlusCircle' is defined but never used.","'faTrash' is defined but never used.","'faSearch' is defined but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'useContext' is defined but never used.","'ListGroup' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'size' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'selectedList.id', 'session?.id', and 'session?.token'. Either include them or remove the dependency array.","ArrayExpression",["149"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["150"],"'notebookCheck' is defined but never used.","'list' is assigned a value but never used.","'setList' is assigned a value but never used.","'useHistory' is defined but never used.","'setSession' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},"Update the dependencies array to be: [selectedList.id, session?.id, session?.token, update]",{"range":"155","text":"156"},"Update the dependencies array to be: [history, session]",{"range":"157","text":"158"},[1852,1860],"[selectedList.id, session?.id, session?.token, update]",[599,608],"[history, session]"]
[{"C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\index.js":"1","C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\App.js":"2","C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\reportWebVitals.js":"3","C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\rotas\\index.js":"4","C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\servicos\\context\\index.js":"5","C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\paginas\\CriarUsuario\\index.js":"6","C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\paginas\\EditarUsuario\\index.js":"7","C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\paginas\\Login\\index.js":"8","C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\paginas\\Principal\\index.js":"9","C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\paginas\\Principal\\modal.js":"10","C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\servicos\\api\\index.js":"11"},{"size":517,"mtime":1634558919151,"results":"12","hashOfConfig":"13"},{"size":480,"mtime":1634568815621,"results":"14","hashOfConfig":"13"},{"size":375,"mtime":1634558919158,"results":"15","hashOfConfig":"13"},{"size":912,"mtime":1634573169534,"results":"16","hashOfConfig":"13"},{"size":691,"mtime":1634567769113,"results":"17","hashOfConfig":"13"},{"size":4866,"mtime":1634558919154,"results":"18","hashOfConfig":"13"},{"size":255,"mtime":1634558919155,"results":"19","hashOfConfig":"13"},{"size":3777,"mtime":1634568083949,"results":"20","hashOfConfig":"13"},{"size":9216,"mtime":1634573300785,"results":"21","hashOfConfig":"13"},{"size":2339,"mtime":1634558919158,"results":"22","hashOfConfig":"13"},{"size":258,"mtime":1634558919164,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"dmyrpd",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\index.js",[],["51","52"],"C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\App.js",["53","54"],"C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\reportWebVitals.js",[],"C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\rotas\\index.js",[],"C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\servicos\\context\\index.js",[],"C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\paginas\\CriarUsuario\\index.js",["55","56","57","58","59","60","61","62"],"import React, { useState, useEffect } from \"react\";\r\nimport { Col, Row, Container, Form, Button } from \"react-bootstrap\";\r\n\r\n//UseHistory\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\n//API\r\nimport API from \"../../servicos/api\";\r\n\r\nconst CriarUsuario = () => {\r\n\r\n  const history = useHistory()\r\n\r\n  const [message, setMessage] = useState(\"Hello World\");\r\n  const [name, setName] = useState(\"\")\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\")\r\n  const [passwordAgain, setPasswordAgain] = useState(\"\")\r\n  const [feedback, setFeedback] = useState(\"\")\r\n\r\n  async function createUser() {\r\n\r\n    if (name == \"\") {\r\n      setFeedback(\"Preencha o seu nome, por favor\")\r\n      return\r\n    } else if (username == \"\") {\r\n      setFeedback(\"Preencha o nome de usu치rio, por favor\")\r\n      return\r\n    } else if (password == \"\") {\r\n      setFeedback(\"Preencha a senha, por favor\")\r\n      return\r\n    } else if (password != passwordAgain) {\r\n      setFeedback(\"As senhas s칚o diferentes\")\r\n      return\r\n    }\r\n    console.log(\"chegou\")\r\n    await API.post(\"user\", { name: name, username: username, password: password })\r\n      .then(() => {\r\n        history.push(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        if (err.reponse.message == \"User already exists\") {\r\n          setFeedback(\"Usu치rio j치 existe\")\r\n        } else {\r\n          setFeedback(\"Ocorreu um erro, tente mais tarde :l\")\r\n        }\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Container fluid style={{ fontFamily: \"Courier New\" }}>\r\n\r\n\r\n\r\n      <Row style={{ marginTop: window.innerHeight * (0.2) }}>\r\n        <Col className=\"d-flex justify-content-center\"\r\n          style={{\r\n            fontFamily: \"Courier New\",\r\n            fontSize: 24,\r\n            color: \"#95AF5F\",\r\n            fontWeight: \"bolder\"\r\n          }}>\r\n          Lists\r\n        </Col>\r\n      </Row>\r\n\r\n\r\n      <Row>\r\n        <Col className=\"d-flex justify-content-center\">\r\n          <div style={{\r\n            border: \"solid\",\r\n            padding: 20,\r\n            borderRadius: 5,\r\n            borderWidth: \"1.5px\",\r\n            margin: 5,\r\n            boxShadow: \"5px 3px 0px 0px\"\r\n          }}>\r\n            <p style={{ fontSize: 12 }}>{feedback}</p>\r\n            <Form onSubmit={(e)=> e.preventDefault()}>\r\n\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Control placeholder=\"Nome\" style={{\r\n                  borderColor: \"#DE989A\",\r\n                  borderWidht: \"1.5px\",\r\n                  width: 280,\r\n                  outline: \"none\"\r\n                }}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Control placeholder=\"Usu치rio\" style={{\r\n                  borderColor: \"#DE989A\",\r\n                  borderWidht: \"1.5px\",\r\n                  width: 280,\r\n                  outline: \"none\"\r\n                }}\r\n                  onChange={(e) => setUsername(e.target.value)}\r\n                />\r\n\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Control\r\n                  placeholder=\"Senha...游뱖\"\r\n                  type=\"password\"\r\n                  style={{\r\n                    borderColor: \"#DE989A\",\r\n                    borderWidht: \"1.5px\",\r\n                    width: 280,\r\n                    outline: \"none\"\r\n                  }}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Control\r\n                  placeholder=\"Confirme a senha\"\r\n                  type=\"password\"\r\n                  style={{\r\n                    borderColor: \"#DE989A\",\r\n                    borderWidht: \"1.5px\",\r\n                    width: 280,\r\n                    outline: \"none\"\r\n                  }}\r\n                  onChange={(e) => setPasswordAgain(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                block\r\n                style={{\r\n                  backgroundColor: \"#DE989A\",\r\n                  border: \"#DE989A\",\r\n                  borderRadius: 10,\r\n                  width: 280\r\n                }}\r\n                onClick={() => createUser()}\r\n              >\r\n                Pronto para come칞ar!\r\n              </Button>\r\n\r\n            </Form>\r\n\r\n            <p\r\n              style={{ fontSize: 11, marginTop: 20, textAlign: \"center\" }}\r\n            ><Link to=\"/\">J치 tenho uma com usu치rio e tudo mais</Link></p>\r\n\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n\r\n    </Container >\r\n  )\r\n\r\n}\r\n\r\nexport default CriarUsuario;\r\n","C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\paginas\\EditarUsuario\\index.js",["63","64"],"import React, { useState, useEffect } from \"react\";\r\n\r\nconst EditarUsuario = () => {\r\n\r\n  const [message, setMessage] = useState(\"Hello World\");\r\n\r\n  return (\r\n    <div class=\"row\">\r\n      {message}\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default EditarUsuario;\r\n","C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\paginas\\Login\\index.js",["65","66","67"],"import React, { useState, useEffect } from \"react\";\r\nimport { Col, Row, Container, Form, Button } from \"react-bootstrap\";\r\n\r\n//UseHistory\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../servicos/context\"\r\n\r\n//API\r\nimport API from \"../../servicos/api\";\r\n\r\n\r\nconst Login = () => {\r\n  const { session, setSession } = useAuth()\r\n  const history = useHistory();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [feedback, setFeedback] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (session) history.push('/principal')\r\n  }, [session])\r\n\r\n\r\n  async function processLogin() {\r\n\r\n    if (username == \"\") {\r\n      setFeedback(\"Preencha o nome de usu치rio, por favor\")\r\n      return\r\n    } else if (password == \"\") {\r\n      setFeedback(\"Preencha a senha, por favor\")\r\n      return\r\n    }\r\n\r\n    await API.post(\"login\", { username, password })\r\n      .then((response) => {\r\n        setSession({\r\n          token: response.data.token,\r\n          name: response.data.user.name,\r\n          id: response.data.user.id,\r\n          lists: response.data.user.lists\r\n        })\r\n\r\n        history.push(\"/principal\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n        setFeedback(\"Desculpe, n칚o encontramos seu login :l\")\r\n      })\r\n\r\n  }\r\n\r\n  return (\r\n    <Container fluid style={{ fontFamily: \"Courier New\" }}>\r\n\r\n      <Row style={{ marginTop: window.innerHeight * (0.2) }}>\r\n        <Col className=\"d-flex justify-content-center\"\r\n          style={{\r\n            fontFamily: \"Courier New\",\r\n            fontSize: 24,\r\n            color: \"#95AF5F\",\r\n            fontWeight: \"bolder\"\r\n          }}>\r\n          Lists\r\n        </Col>\r\n      </Row>\r\n\r\n\r\n      <Row>\r\n        <Col className=\"d-flex justify-content-center\">\r\n          <div style={{\r\n            border: \"solid\",\r\n            padding: 20,\r\n            borderRadius: 5,\r\n            borderWidth: \"1.5px\",\r\n            margin: 5,\r\n            boxShadow: \"5px 3px 0px 0px\"\r\n          }}>\r\n            <p style={{ fontSize: 12 }}>{feedback}</p>\r\n            <Form onSubmit={(e) => e.preventDefault()} >\r\n\r\n              <Form.Group style={{ marginBottom: 10 }}>\r\n                <Form.Control placeholder=\"Usu치rio\" style={{\r\n                  borderColor: \"#DE989A\",\r\n                  borderWidht: \"1.5px\",\r\n                  width: 280,\r\n                  outline: \"none\"\r\n                }}\r\n                  onChange={(e) => setUsername(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group style={{ marginBottom: 10 }}>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Senha\"\r\n                  style={{\r\n                    borderColor: \"#DE989A\",\r\n                    borderWidht: \"1.5px\",\r\n                    width: 280,\r\n                    outline: \"none\"\r\n                  }}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Button\r\n                block\r\n                type=\"submit\"\r\n                style={{\r\n                  backgroundColor: \"#DE989A\",\r\n                  border: \"#DE989A\",\r\n                  borderRadius: 10,\r\n                  width: 280\r\n                }}\r\n                onClick={() => processLogin()}\r\n              >\r\n                Vamos l치\r\n              </Button>\r\n\r\n            </Form>\r\n\r\n            <p\r\n              style={{ fontSize: 11, marginTop: 20, textAlign: \"center\" }}\r\n            >Como assim voc칡 ainda n칚o tem uma conta??<br /> <Link to=\"/criar\">Crie agora</Link></p>\r\n\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n\r\n    </Container >\r\n  )\r\n\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\paginas\\Principal\\index.js",["68","69","70","71","72","73","74"],"C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\paginas\\Principal\\modal.js",["75","76"],"import React, { useState } from \"react\";\r\nimport { Row, Col, Button, Modal, Form } from \"react-bootstrap\";\r\n\r\nimport API from \"../../servicos/api\";\r\n\r\nexport const AddListModal = (props) => {\r\n  const [list, setList] = useState({ name: \"\", user_id: props.user_id })\r\n\r\n  async function createList() {\r\n\r\n    await API.post(\"/list\", list, {\r\n      headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n      \"Authorization\": `Bearer ${props.token}`\r\n    }})\r\n      .then((response) => {\r\n        props.close()\r\n\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Modal show={true} style={{ borderRadius:10, borderWidth:2 }} onHide={()=> props.close()} >\r\n      <Modal.Header closeButton>\r\n\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n          <Form onSubmit={(e)=>e.preventDefault()}>\r\n            <Form.Group>\r\n              <Form.Label>Nome da lista</Form.Label>\r\n                <Form.Control\r\n                style={{\r\n                 borderColor: \"#DE989A\",\r\n                 borderWidht: \"1.5px\",\r\n                 outline: \"none\"\r\n               }}\r\n                type=\"text\"\r\n                onChange={(e)=>setList({...list,name: e.target.value})}\r\n                />\r\n            </Form.Group>\r\n            <Row>\r\n            <Col>\r\n            <Button\r\n              type=\"submit\"\r\n              style={{\r\n                backgroundColor: \"#DE989A\",\r\n                border: \"#DE989A\",\r\n                borderRadius: 10,\r\n                marginTop:20\r\n              }}\r\n              onClick={()=>createList()}\r\n            >\r\n              Feito!\r\n            </Button>\r\n            </Col>\r\n            </Row>\r\n          </Form>\r\n      </Modal.Body>\r\n\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport const AddItemList = (props) => {\r\n  const [list, setList] = useState({ name: \"\", user_id: null })\r\n\r\n  return (\r\n    <Modal show={props.show}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Modal heading</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\">\r\n          Close\r\n          </Button>\r\n        <Button variant=\"primary\">\r\n          Save Changes\r\n          </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n","C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\servicos\\api\\index.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":16,"column":10,"nodeType":"83","messageId":"84","endLine":16,"endColumn":15},{"ruleId":"81","severity":1,"message":"85","line":16,"column":17,"nodeType":"83","messageId":"84","endLine":16,"endColumn":25},{"ruleId":"81","severity":1,"message":"86","line":1,"column":27,"nodeType":"83","messageId":"84","endLine":1,"endColumn":36},{"ruleId":"81","severity":1,"message":"87","line":14,"column":10,"nodeType":"83","messageId":"84","endLine":14,"endColumn":17},{"ruleId":"81","severity":1,"message":"88","line":14,"column":19,"nodeType":"83","messageId":"84","endLine":14,"endColumn":29},{"ruleId":"89","severity":1,"message":"90","line":23,"column":14,"nodeType":"91","messageId":"92","endLine":23,"endColumn":16},{"ruleId":"89","severity":1,"message":"90","line":26,"column":25,"nodeType":"91","messageId":"92","endLine":26,"endColumn":27},{"ruleId":"89","severity":1,"message":"90","line":29,"column":25,"nodeType":"91","messageId":"92","endLine":29,"endColumn":27},{"ruleId":"89","severity":1,"message":"93","line":32,"column":25,"nodeType":"91","messageId":"92","endLine":32,"endColumn":27},{"ruleId":"89","severity":1,"message":"90","line":42,"column":33,"nodeType":"91","messageId":"92","endLine":42,"endColumn":35},{"ruleId":"81","severity":1,"message":"86","line":1,"column":27,"nodeType":"83","messageId":"84","endLine":1,"endColumn":36},{"ruleId":"81","severity":1,"message":"88","line":5,"column":19,"nodeType":"83","messageId":"84","endLine":5,"endColumn":29},{"ruleId":"94","severity":1,"message":"95","line":22,"column":6,"nodeType":"96","endLine":22,"endColumn":15,"suggestions":"97"},{"ruleId":"89","severity":1,"message":"90","line":27,"column":18,"nodeType":"91","messageId":"92","endLine":27,"endColumn":20},{"ruleId":"89","severity":1,"message":"90","line":30,"column":25,"nodeType":"91","messageId":"92","endLine":30,"endColumn":27},{"ruleId":"81","severity":1,"message":"98","line":1,"column":38,"nodeType":"83","messageId":"84","endLine":1,"endColumn":48},{"ruleId":"94","severity":1,"message":"99","line":45,"column":6,"nodeType":"96","endLine":45,"endColumn":8,"suggestions":"100"},{"ruleId":"89","severity":1,"message":"90","line":58,"column":38,"nodeType":"91","messageId":"92","endLine":58,"endColumn":40},{"ruleId":"101","severity":1,"message":"102","line":63,"column":44,"nodeType":"103","messageId":"104","endLine":63,"endColumn":46},{"ruleId":"89","severity":1,"message":"90","line":64,"column":27,"nodeType":"91","messageId":"92","endLine":64,"endColumn":29},{"ruleId":"94","severity":1,"message":"105","line":72,"column":6,"nodeType":"96","endLine":72,"endColumn":14,"suggestions":"106"},{"ruleId":"89","severity":1,"message":"90","line":274,"column":103,"nodeType":"91","messageId":"92","endLine":274,"endColumn":105},{"ruleId":"81","severity":1,"message":"107","line":69,"column":10,"nodeType":"83","messageId":"84","endLine":69,"endColumn":14},{"ruleId":"81","severity":1,"message":"108","line":69,"column":16,"nodeType":"83","messageId":"84","endLine":69,"endColumn":23},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'token' is assigned a value but never used.","Identifier","unusedVar","'setToken' is assigned a value but never used.","'useEffect' is defined but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["111"],"'useContext' is defined but never used.","React Hook useEffect has a missing dependency: 'lists'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSelectedList' needs the current value of 'lists'.",["112"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'selectedList.id', 'session?.id', and 'session?.token'. Either include them or remove the dependency array.",["113"],"'list' is assigned a value but never used.","'setList' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [history, session]",{"range":"120","text":"121"},"Update the dependencies array to be: [lists]",{"range":"122","text":"123"},"Update the dependencies array to be: [selectedList.id, session?.id, session?.token, update]",{"range":"124","text":"125"},[618,627],"[history, session]",[1355,1357],"[lists]",[2152,2160],"[selectedList.id, session?.id, session?.token, update]"]
[{"/Users/user/Documents/Faculdade/desenvolvimentoWeb/lists/src/index.js":"1","/Users/user/Documents/Faculdade/desenvolvimentoWeb/lists/src/App.js":"2","/Users/user/Documents/Faculdade/desenvolvimentoWeb/lists/src/reportWebVitals.js":"3","/Users/user/Documents/Faculdade/desenvolvimentoWeb/lists/src/rotas/index.js":"4","/Users/user/Documents/Faculdade/desenvolvimentoWeb/lists/src/paginas/Login/index.js":"5","/Users/user/Documents/Faculdade/desenvolvimentoWeb/lists/src/paginas/EditarUsuario/index.js":"6","/Users/user/Documents/Faculdade/desenvolvimentoWeb/lists/src/paginas/CriarUsuario/index.js":"7","/Users/user/Documents/Faculdade/desenvolvimentoWeb/lists/src/paginas/Principal/index.js":"8","/Users/user/Documents/Faculdade/desenvolvimentoWeb/lists/src/servicos/api/index.js":"9","/Users/user/Documents/Faculdade/desenvolvimentoWeb/lists/src/servicos/context/index.js":"10"},{"size":500,"mtime":1632508264272,"results":"11","hashOfConfig":"12"},{"size":454,"mtime":1632587553615,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1632508264274,"results":"14","hashOfConfig":"12"},{"size":845,"mtime":1632592226225,"results":"15","hashOfConfig":"12"},{"size":3657,"mtime":1632669731319,"results":"16","hashOfConfig":"12"},{"size":240,"mtime":1632510337581,"results":"17","hashOfConfig":"12"},{"size":4614,"mtime":1632585824209,"results":"18","hashOfConfig":"12"},{"size":4140,"mtime":1632669694244,"results":"19","hashOfConfig":"12"},{"size":246,"mtime":1632669593854,"results":"20","hashOfConfig":"12"},{"size":371,"mtime":1632588879003,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"iuiao0",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/user/Documents/Faculdade/desenvolvimentoWeb/lists/src/index.js",[],["49","50"],"/Users/user/Documents/Faculdade/desenvolvimentoWeb/lists/src/App.js",["51","52"],"import React, { useState } from \"react\";\nimport './App.css';\n\n//BOOTSTRAP\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n//ROTAS\nimport Rotas from \"./rotas\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n//PROVIDER\nimport Provider from \"./servicos/context\"\n\n\n\nfunction App() {\n  const [token, setToken] = useState(\"He\")\n  return (\n    <Provider>\n      <Router>\n        <Rotas />\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","/Users/user/Documents/Faculdade/desenvolvimentoWeb/lists/src/reportWebVitals.js",[],"/Users/user/Documents/Faculdade/desenvolvimentoWeb/lists/src/rotas/index.js",["53","54"],"import React, { useContext } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Context } from \"../servicos/context\";\n\n//PAGINAS\nimport Login from \"../paginas/Login\";\nimport EditarUsuario from \"../paginas/EditarUsuario\";\nimport CriarUsuario from \"../paginas/CriarUsuario\";\nimport Principal from \"../paginas/Principal\";\n\nexport default function Rotas() {\n  const context = useContext(Context);\n  const Unathorized = () => <div>Faça o login primeiro :)</div>\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Login} />\n\n      <Route exact path=\"/principal\" component={context.infos.token != \"\" ? Principal : Unathorized} />\n      <Route exact path=\"/editar\" component={context.infos.token != \"\" ? EditarUsuario : Unathorized} />\n      <Route exact path=\"/criar\" component={CriarUsuario} />\n\n    </Switch>\n  )\n}\n","/Users/user/Documents/Faculdade/desenvolvimentoWeb/lists/src/paginas/Login/index.js",["55","56","57"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { Col, Row, Container, Form, Button } from \"react-bootstrap\";\n\n//UseHistory\nimport { useHistory, Link } from \"react-router-dom\";\nimport { Context } from \"../../servicos/context\"\n\n//API\nimport API from \"../../servicos/api\";\n\n\nconst Login = () => {\n\n  const history = useHistory();\n  const informations = useContext(Context)\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [feedback, setFeedback] = useState(\"\");\n\n  useEffect(() => { console.log(informations) }, [])\n\n\n  async function processLogin() {\n\n    if (username == \"\") {\n      setFeedback(\"Preencha o nome de usuário, por favor\")\n      return\n    } else if (password == \"\") {\n      setFeedback(\"Preencha a senha, por favor\")\n      return\n    }\n\n    await API.post(\"login\", { username: username, password: password })\n      .then((response) => {\n        informations.setInfos({\n          ...informations.infos,\n          token: response.data.token,\n          name: response.data.user.name,\n          id: response.data.user.id,\n          lists: response.data.user.lists\n        })\n        history.push(\"/principal\");\n      })\n      .catch((err) => {\n        console.log(err)\n        setFeedback(\"Desculpe, não encontramos seu login :l\")\n      })\n\n  }\n\n  return (\n    <Container fluid style={{ fontFamily: \"Courier New\" }}>\n\n\n\n      <Row style={{ marginTop: window.innerHeight * (0.2) }}>\n        <Col className=\"d-flex justify-content-center\"\n          style={{\n            fontFamily: \"Courier New\",\n            fontSize: 24,\n            color: \"#95AF5F\",\n            fontWeight: \"bolder\"\n          }}>\n          Lists\n        </Col>\n      </Row>\n\n\n      <Row>\n        <Col className=\"d-flex justify-content-center\">\n          <div style={{\n            border: \"solid\",\n            padding: 20,\n            borderRadius: 5,\n            borderWidth: \"1.5px\",\n            margin: 5,\n            boxShadow: \"5px 3px 0px 0px\"\n          }}>\n            <p style={{ fontSize: 12 }}>{feedback}</p>\n            <Form >\n\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Control placeholder=\"Usuário\" style={{\n                  borderColor: \"#DE989A\",\n                  borderWidht: \"1.5px\",\n                  width: 280,\n                  outline: \"none\"\n                }}\n                  onChange={(e) => setUsername(e.target.value)}\n                />\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Senha\"\n                  style={{\n                    borderColor: \"#DE989A\",\n                    borderWidht: \"1.5px\",\n                    width: 280,\n                    outline: \"none\"\n                  }}\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </Form.Group>\n\n            </Form>\n            <Button\n              block\n              type=\"submit\"\n              style={{\n                backgroundColor: \"#DE989A\",\n                border: \"#DE989A\",\n                borderRadius: 10,\n                width: 280\n              }}\n              onClick={() => processLogin()}\n            >\n              Vamos lá\n            </Button>\n\n            <p\n              style={{ fontSize: 11, marginTop: 20, textAlign: \"center\" }}\n            >Como assim você ainda não tem uma conta??<br /> <Link to=\"/criar\">Crie agora</Link></p>\n\n          </div>\n        </Col>\n      </Row>\n\n    </Container >\n  )\n\n}\n\nexport default Login;\n","/Users/user/Documents/Faculdade/desenvolvimentoWeb/lists/src/paginas/EditarUsuario/index.js",["58","59"],"import React, { useState, useEffect } from \"react\";\n\nconst EditarUsuario = () => {\n\n  const [message, setMessage] = useState(\"Hello World\");\n\n  return (\n    <div class=\"row\">\n      {message}\n    </div>\n  )\n\n}\n\nexport default EditarUsuario;\n","/Users/user/Documents/Faculdade/desenvolvimentoWeb/lists/src/paginas/CriarUsuario/index.js",["60","61","62","63","64","65","66","67"],"import React, { useState, useEffect } from \"react\";\nimport { Col, Row, Container, Form, Button } from \"react-bootstrap\";\n\n//UseHistory\nimport { useHistory, Link } from \"react-router-dom\";\n\n//API\nimport API from \"../../servicos/api\";\n\nconst CriarUsuario = () => {\n\n  const history = useHistory()\n\n  const [message, setMessage] = useState(\"Hello World\");\n  const [name, setName] = useState(\"\")\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\")\n  const [passwordAgain, setPasswordAgain] = useState(\"\")\n  const [feedback, setFeedback] = useState(\"\")\n\n  async function createUser() {\n\n    if (name == \"\") {\n      setFeedback(\"Preencha o seu nome, por favor\")\n      return\n    } else if (username == \"\") {\n      setFeedback(\"Preencha o nome de usuário, por favor\")\n      return\n    } else if (password == \"\") {\n      setFeedback(\"Preencha a senha, por favor\")\n      return\n    } else if (password != passwordAgain) {\n      setFeedback(\"As senhas são diferentes\")\n      return\n    }\n    console.log(\"chegou\")\n    await API.post(\"user\", { name: name, username: username, password: password })\n      .then(() => {\n        history.push(\"/\");\n      })\n      .catch((err) => {\n        if (err.reponse.message == \"User already exists\") {\n          setFeedback(\"Usuário já existe\")\n        } else {\n          setFeedback(\"Ocorreu um erro, tente mais tarde :l\")\n        }\n      })\n  }\n\n  return (\n    <Container fluid style={{ fontFamily: \"Courier New\" }}>\n\n\n\n      <Row style={{ marginTop: window.innerHeight * (0.2) }}>\n        <Col className=\"d-flex justify-content-center\"\n          style={{\n            fontFamily: \"Courier New\",\n            fontSize: 24,\n            color: \"#95AF5F\",\n            fontWeight: \"bolder\"\n          }}>\n          Lists\n        </Col>\n      </Row>\n\n\n      <Row>\n        <Col className=\"d-flex justify-content-center\">\n          <div style={{\n            border: \"solid\",\n            padding: 20,\n            borderRadius: 5,\n            borderWidth: \"1.5px\",\n            margin: 5,\n            boxShadow: \"5px 3px 0px 0px\"\n          }}>\n            <p style={{ fontSize: 12 }}>{feedback}</p>\n            <Form>\n\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Control placeholder=\"Nome\" style={{\n                  borderColor: \"#DE989A\",\n                  borderWidht: \"1.5px\",\n                  width: 280,\n                  outline: \"none\"\n                }}\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Control placeholder=\"Usuário\" style={{\n                  borderColor: \"#DE989A\",\n                  borderWidht: \"1.5px\",\n                  width: 280,\n                  outline: \"none\"\n                }}\n                  onChange={(e) => setUsername(e.target.value)}\n                />\n\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Control\n                  placeholder=\"Senha...🤫\"\n                  type=\"password\"\n                  style={{\n                    borderColor: \"#DE989A\",\n                    borderWidht: \"1.5px\",\n                    width: 280,\n                    outline: \"none\"\n                  }}\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Control\n                  placeholder=\"Confirme a senha\"\n                  type=\"password\"\n                  style={{\n                    borderColor: \"#DE989A\",\n                    borderWidht: \"1.5px\",\n                    width: 280,\n                    outline: \"none\"\n                  }}\n                  onChange={(e) => setPasswordAgain(e.target.value)}\n                />\n              </Form.Group>\n\n            </Form>\n            <Button\n              block\n              style={{\n                backgroundColor: \"#DE989A\",\n                border: \"#DE989A\",\n                borderRadius: 10,\n                width: 280\n              }}\n              onClick={() => createUser()}\n            >\n              Pronto para começar!\n            </Button>\n\n            <p\n              style={{ fontSize: 11, marginTop: 20, textAlign: \"center\" }}\n            ><Link to=\"/\">Já tenho uma com usuário e tudo mais</Link></p>\n\n          </div>\n        </Col>\n      </Row>\n\n    </Container >\n  )\n\n}\n\nexport default CriarUsuario;\n","/Users/user/Documents/Faculdade/desenvolvimentoWeb/lists/src/paginas/Principal/index.js",["68","69","70","71","72","73","74"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { Container, Row, Col, ListGroup } from \"react-bootstrap\"\nimport { useHistory } from \"react-router-dom\"\nimport { Context } from \"../../servicos/context\"\n\n//FONT AWESOME ICONS\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlusCircle, faTrash, faDoorOpen } from '@fortawesome/free-solid-svg-icons'\n\n//API\nimport API from \"../../servicos/api\";\n\nconst Principal = () => {\n\n  const informations = useContext(Context)\n  const [lists, setLists] = useState(informations.infos.lists)\n  const [newList, setNewList] = useState({ name: \"\", user_id: null })\n  const [newItem, setNewItem] = useState({ name: \"\", type: \"\", flavor: \"\", list_id: null })\n  const history = useHistory();\n\n  const [listName, setListName] = useState(\"\")\n\n  useEffect(() => {\n    API.interceptors.request.use(function Config(config) {\n      config.headers = {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Authorization\": `Bearer ${informations.infos.token}`\n      }\n      return config;\n    });\n  }, [])\n\n  async function createList() {\n\n    API.post(\"/list\", newList)\n      .then((response) => {\n        setLists([...lists, newList])\n        setNewList({ name: \"\", user_id: null })\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n\n  }\n\n  async function addItem() {\n\n    API.post(\"/item\", newItem)\n      .then((response) => {\n        let list = lists\n        lists[newItem.list_id].push(newItem)\n\n        setLists(list)\n        setNewItem({ name: \"\", type: \"\", flavor: \"\", list_id: null })\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n\n  }\n\n  return (\n    <Container fluid style={{ fontFamily: \"Courier New\" }}>\n\n      <Row style={{ marginTop: 20, boxShadow: \"0px 3px rgb(0,0,0,0.1)\" }}>\n        <Col className=\"d-flex justify-content-start\" style={{ fontSize: 18, marginBottom: 12 }}>Bem-vindo, {informations.infos.name}! ;)</Col>\n        <Col className=\"d-flex justify-content-end\" ><FontAwesomeIcon icon={faDoorOpen} onClick={() => history.push(\"/\")} /></Col>\n      </Row>\n\n      <Row style={{ marginTop: 30 }} md={12}>\n        <Col md={4}>\n          <div style={{\n            width: 330,\n            height: \"100%\",\n            padding: 20,\n\n          }}>\n            <Row style={{ marginBottom: 10 }} >\n              <Col style={{ fontSize: 24, color: \"white\", backgroundColor: \"#DE989A\", borderRadius: 10 }}>Listas</Col>\n            </Row>\n\n            <Row>\n              {informations.infos.lists.length > 0 ?\n                <ListGroup variant=\"flush\">\n                  {\n                    informations.infos.lists.map((list) => {\n                      <ListGroup.Item style={{ border: \"solid\", borderColor: \"black\", borderRadius: 80 }} action active={true}>{list.name}</ListGroup.Item>\n                    })\n                  }\n                </ListGroup>\n                :\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item action>Vamos começar?! Clique em <FontAwesomeIcon icon={faPlusCircle} size=\"xs\" color=\"#75903E\" /> </ListGroup.Item>\n                </ListGroup>\n              }\n            </Row>\n            <Row style={{ marginBottom: 10 }}>\n              <Col className=\"d-flex justify-content-center\"><FontAwesomeIcon icon={faPlusCircle} size=\"lg\" color=\"#75903E\" /></Col>\n            </Row>\n          </div>\n        </Col>\n\n        <Col style={{ height: window.innerHeight * (0.8) }}>\n          <div style={{\n            width: \"70%\",\n            height: \"100%\",\n            padding: 20,\n            border: \"solid\",\n            borderRadius: 20,\n            borderWidth: \"1px\",\n            boxShadow: \"5px 3px gray\",\n            borderColor: \"#E7E7E7\"\n          }}>\n            <Row style={{ marginBottom: 20 }} >\n              <Col style={{ fontSize: 24, color: \"white\", backgroundColor: \"#A799B7\", borderRadius: 10 }}>Items da lista</Col>\n            </Row>\n\n            <Row style={{ marginBottom: 10 }}>\n\n            </Row>\n          </div>\n        </Col>\n\n      </Row>\n    </Container >\n  )\n\n}\n\nexport default Principal;\n","/Users/user/Documents/Faculdade/desenvolvimentoWeb/lists/src/servicos/api/index.js",[],"/Users/user/Documents/Faculdade/desenvolvimentoWeb/lists/src/servicos/context/index.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":16,"column":10,"nodeType":"81","messageId":"82","endLine":16,"endColumn":15},{"ruleId":"79","severity":1,"message":"83","line":16,"column":17,"nodeType":"81","messageId":"82","endLine":16,"endColumn":25},{"ruleId":"84","severity":1,"message":"85","line":18,"column":69,"nodeType":"86","messageId":"87","endLine":18,"endColumn":71},{"ruleId":"84","severity":1,"message":"85","line":19,"column":66,"nodeType":"86","messageId":"87","endLine":19,"endColumn":68},{"ruleId":"88","severity":1,"message":"89","line":21,"column":50,"nodeType":"90","endLine":21,"endColumn":52,"suggestions":"91"},{"ruleId":"84","severity":1,"message":"92","line":26,"column":18,"nodeType":"86","messageId":"87","endLine":26,"endColumn":20},{"ruleId":"84","severity":1,"message":"92","line":29,"column":25,"nodeType":"86","messageId":"87","endLine":29,"endColumn":27},{"ruleId":"79","severity":1,"message":"93","line":1,"column":27,"nodeType":"81","messageId":"82","endLine":1,"endColumn":36},{"ruleId":"79","severity":1,"message":"94","line":5,"column":19,"nodeType":"81","messageId":"82","endLine":5,"endColumn":29},{"ruleId":"79","severity":1,"message":"93","line":1,"column":27,"nodeType":"81","messageId":"82","endLine":1,"endColumn":36},{"ruleId":"79","severity":1,"message":"95","line":14,"column":10,"nodeType":"81","messageId":"82","endLine":14,"endColumn":17},{"ruleId":"79","severity":1,"message":"94","line":14,"column":19,"nodeType":"81","messageId":"82","endLine":14,"endColumn":29},{"ruleId":"84","severity":1,"message":"92","line":23,"column":14,"nodeType":"86","messageId":"87","endLine":23,"endColumn":16},{"ruleId":"84","severity":1,"message":"92","line":26,"column":25,"nodeType":"86","messageId":"87","endLine":26,"endColumn":27},{"ruleId":"84","severity":1,"message":"92","line":29,"column":25,"nodeType":"86","messageId":"87","endLine":29,"endColumn":27},{"ruleId":"84","severity":1,"message":"85","line":32,"column":25,"nodeType":"86","messageId":"87","endLine":32,"endColumn":27},{"ruleId":"84","severity":1,"message":"92","line":42,"column":33,"nodeType":"86","messageId":"87","endLine":42,"endColumn":35},{"ruleId":"79","severity":1,"message":"96","line":8,"column":24,"nodeType":"81","messageId":"82","endLine":8,"endColumn":31},{"ruleId":"79","severity":1,"message":"97","line":21,"column":10,"nodeType":"81","messageId":"82","endLine":21,"endColumn":18},{"ruleId":"79","severity":1,"message":"98","line":21,"column":20,"nodeType":"81","messageId":"82","endLine":21,"endColumn":31},{"ruleId":"88","severity":1,"message":"99","line":32,"column":6,"nodeType":"90","endLine":32,"endColumn":8,"suggestions":"100"},{"ruleId":"79","severity":1,"message":"101","line":34,"column":18,"nodeType":"81","messageId":"82","endLine":34,"endColumn":28},{"ruleId":"79","severity":1,"message":"102","line":47,"column":18,"nodeType":"81","messageId":"82","endLine":47,"endColumn":25},{"ruleId":"103","severity":1,"message":"104","line":87,"column":57,"nodeType":"105","messageId":"106","endLine":87,"endColumn":59},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'token' is assigned a value but never used.","Identifier","unusedVar","'setToken' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'informations'. Either include it or remove the dependency array.","ArrayExpression",["109"],"Expected '===' and instead saw '=='.","'useEffect' is defined but never used.","'setMessage' is assigned a value but never used.","'message' is assigned a value but never used.","'faTrash' is defined but never used.","'listName' is assigned a value but never used.","'setListName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'informations.infos.token'. Either include it or remove the dependency array.",["110"],"'createList' is defined but never used.","'addItem' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},"Update the dependencies array to be: [informations]",{"range":"115","text":"116"},"Update the dependencies array to be: [informations.infos.token]",{"range":"117","text":"118"},[589,591],"[informations]",[1115,1117],"[informations.infos.token]"]
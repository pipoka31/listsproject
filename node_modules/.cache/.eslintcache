[{"C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\index.js":"1","C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\App.js":"2","C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\reportWebVitals.js":"3","C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\rotas\\index.js":"4","C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\servicos\\context\\index.js":"5","C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\paginas\\CriarUsuario\\index.js":"6","C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\paginas\\EditarUsuario\\index.js":"7","C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\paginas\\Login\\index.js":"8","C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\paginas\\Principal\\index.js":"9","C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\paginas\\Principal\\modal.js":"10","C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\servicos\\api\\index.js":"11"},{"size":517,"mtime":1634558919151,"results":"12","hashOfConfig":"13"},{"size":480,"mtime":1634568815621,"results":"14","hashOfConfig":"13"},{"size":375,"mtime":1634558919158,"results":"15","hashOfConfig":"13"},{"size":906,"mtime":1637864075430,"results":"16","hashOfConfig":"13"},{"size":565,"mtime":1634914284868,"results":"17","hashOfConfig":"13"},{"size":5507,"mtime":1637959105325,"results":"18","hashOfConfig":"13"},{"size":255,"mtime":1634558919155,"results":"19","hashOfConfig":"13"},{"size":4438,"mtime":1637959334751,"results":"20","hashOfConfig":"13"},{"size":9212,"mtime":1637865741794,"results":"21","hashOfConfig":"13"},{"size":2339,"mtime":1634558919158,"results":"22","hashOfConfig":"13"},{"size":258,"mtime":1634558919164,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"dmyrpd",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\index.js",[],["51","52"],"C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\App.js",["53","54"],"import React, { useState } from \"react\";\r\nimport './App.css';\r\n\r\n//BOOTSTRAP\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n//ROTAS\r\nimport Rotas from \"./rotas\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\n//PROVIDER\r\nimport Provider from \"./servicos/context\"\r\n\r\n\r\n\r\nfunction App() {\r\n  const [token, setToken] = useState(\"He\")\r\n  return (\r\n    <Router>\r\n      <Provider>\r\n        <Rotas />\r\n      </Provider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\reportWebVitals.js",[],"C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\rotas\\index.js",[],"C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\servicos\\context\\index.js",[],"C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\paginas\\CriarUsuario\\index.js",["55","56","57","58","59","60","61"],"C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\paginas\\EditarUsuario\\index.js",["62","63"],"import React, { useState, useEffect } from \"react\";\r\n\r\nconst EditarUsuario = () => {\r\n\r\n  const [message, setMessage] = useState(\"Hello World\");\r\n\r\n  return (\r\n    <div class=\"row\">\r\n      {message}\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default EditarUsuario;\r\n","C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\paginas\\Login\\index.js",["64","65","66"],"C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\paginas\\Principal\\index.js",["67","68","69","70","71","72","73"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Container, Row, Col, ListGroup, Form, Button } from \"react-bootstrap\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { useAuth } from \"../../servicos/context\"\r\n\r\n//FONT AWESOME ICONS\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlusCircle, faTrash, faDoorOpen } from '@fortawesome/free-solid-svg-icons'\r\n\r\n//API\r\nimport API from \"../../servicos/api\";\r\n\r\n//MODALS\r\nimport { AddListModal } from \"./modal\";\r\n\r\nconst Principal = () => {\r\n  const { session, setSession } = useAuth()\r\n  const [lists, setLists] = useState(session?.lists)\r\n  const [newItem, setNewItem] = useState(\"\")\r\n  const [editingItem, setEditingItem] = useState({})\r\n  const [editingMode, setEditingMode] = useState(false)\r\n  const [update, setUpdate] = useState(false)\r\n  const [selectedList, setSelectedList] = useState({\r\n    id: 0,\r\n    name: \"\",\r\n    user_id: null,\r\n    items_quantity: null,\r\n    items: []\r\n  })\r\n  const [showListModal, setShowListModal] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!session) {\r\n      history.push('/')\r\n    }\r\n  }, [session, history])\r\n\r\n  //Ao montar o componente verifica se ja existem listas\r\n  useEffect(() => {\r\n    if (lists.length > 0) {\r\n      setSelectedList(lists[0])\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    (\r\n      async function update() {\r\n        await API.get(`lists/${session?.id}`, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Authorization\": `Bearer ${session?.token}`\r\n          }\r\n        })\r\n          .then((response) => {\r\n            if (response.data.length == 1) {\r\n              setSelectedList(response.data[0])\r\n            }\r\n            setLists(response.data.lists)\r\n            console.log(response.data)\r\n            response.data.lists.map((list) => {\r\n              if (list.id == selectedList.id) {\r\n                setSelectedList(list)\r\n              }\r\n            })\r\n          })\r\n          .catch((err) => console.log(err))\r\n      }\r\n    )()\r\n  }, [update])\r\n\r\n  function modalListClose(value) {\r\n    setShowListModal(false);\r\n    setUpdate(!update)\r\n  }\r\n\r\n  async function addItem() {\r\n\r\n    let item = {\r\n      name: newItem,\r\n      type: \"item\",\r\n      list_id: selectedList.id\r\n    }\r\n\r\n    await API.post(\"item\", item, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Authorization\": `Bearer ${session?.token}`\r\n      }\r\n    })\r\n      .then((response) => {\r\n        setNewItem(\"\")\r\n        setUpdate(!update)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n\r\n  }\r\n\r\n  async function deleteItem(item) {\r\n    let payload = {\r\n      done: item.done ? 1 : 0,\r\n      flavor: item.flavor,\r\n      item_id: item.id,\r\n      list_id: item.list_id,\r\n      name: item.name,\r\n      type: item.type\r\n    }\r\n\r\n    await API.delete(\"item\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Authorization\": `Bearer ${session?.token}`,\r\n      },\r\n      data: payload\r\n    })\r\n      .then(() => setUpdate(!update))\r\n      .catch((err) => console.log(err))\r\n\r\n  }\r\n\r\n  async function updateItem() {\r\n    let item = {\r\n      name: newItem,\r\n      flavor: editingItem.flavor,\r\n      type: editingItem.type,\r\n      item_id: editingItem.id,\r\n      list_id: editingItem.list_id,\r\n      done: editingItem.done ? 1 : 0\r\n    }\r\n    console.log(item)\r\n    await API.put(\"item\", item, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Authorization\": `Bearer ${session?.token}`\r\n      }\r\n    })\r\n      .then((response) => {\r\n        setUpdate(!update)\r\n        setNewItem(\"\")\r\n        setEditingMode(false)\r\n        setEditingItem({ id: 0 })\r\n      })\r\n      .catch((err) => console.log(err))\r\n\r\n  }\r\n\r\n  function startEditingMode(item) {\r\n    setEditingItem(item)\r\n    setNewItem(item.name)\r\n    setEditingMode(true)\r\n  }\r\n\r\n  function signOut() {\r\n    setSession(null)\r\n  }\r\n\r\n\r\n  return (\r\n    <Container fluid style={{ fontFamily: \"Courier New\" }}>\r\n      {showListModal ? <AddListModal show={true} user_id={session?.id} close={modalListClose} token={session?.token} /> : \"\"}\r\n\r\n      <Row style={{ marginTop: 20, boxShadow: \"0px 3px rgb(0,0,0,0.1)\" }}>\r\n        <Col className=\"d-flex justify-content-start\" style={{ fontSize: 18, marginBottom: 12 }}>Bem-vindo, {session?.name}! ;)</Col>\r\n        <Col className=\"d-flex justify-content-end\" ><FontAwesomeIcon icon={faDoorOpen} onClick={signOut} /></Col>\r\n      </Row>\r\n\r\n      <Row style={{ marginTop: 30 }} md={12}>\r\n        <Col md={4}>\r\n          <div style={{\r\n            width: 330,\r\n            height: \"100%\",\r\n            padding: 20,\r\n\r\n          }}>\r\n            <Row style={{ marginBottom: 10 }} >\r\n              <Col style={{ fontSize: 24, color: \"white\", backgroundColor: \"#DE989A\", borderRadius: 10 }}>Listas</Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              {lists.length > 0 ?\r\n                <ListGroup variant=\"flush\">\r\n                  {\r\n                    lists.map((list, index) =>\r\n                      <ListGroup.Item key={index} onClick={() => setSelectedList(list)}>{list.name}</ListGroup.Item>\r\n                    )\r\n                  }\r\n                </ListGroup>\r\n                :\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item action>Vamos começar?! Clique em <FontAwesomeIcon icon={faPlusCircle} size=\"xs\" color=\"#75903E\" /> </ListGroup.Item>\r\n                </ListGroup>\r\n              }\r\n            </Row>\r\n            <Row style={{ marginBottom: 10 }}>\r\n              <Col className=\"d-flex justify-content-center\" onClick={() => setShowListModal(true)}>\r\n                <FontAwesomeIcon icon={faPlusCircle} size=\"lg\" color=\"#75903E\" />\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </Col>\r\n\r\n        {\r\n          lists.length > 0 ?\r\n            <Col style={{ height: window.innerHeight * (0.8) }}>\r\n              <div style={{\r\n                width: \"90%\",\r\n                height: \"100%\",\r\n                padding: 20,\r\n                border: \"solid\",\r\n                borderRadius: 20,\r\n                borderWidth: \"1px\",\r\n                boxShadow: \"5px 3px gray\",\r\n                borderColor: \"#E7E7E7\"\r\n              }}>\r\n                <Row>\r\n                  <Col style={{ fontSize: 24, color: \"white\", backgroundColor: \"#A799B7\", borderRadius: 10, fontFamily: \"Courier New\" }}>{selectedList?.name}</Col>\r\n                </Row>\r\n\r\n                <Row style={{ marginBottom: 20, marginTop: 5 }} noGutters>\r\n                  <Col style={{ fontSize: 12, color: \"black\", fontFamily: \"Courier New\" }}>Criada por: {session?.name}</Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col>\r\n                    <Form onSubmit={(e) => e.preventDefault()}>\r\n                      <Row>\r\n                        <Col md={9}>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            style={{ borderRadius: 10 }}\r\n                            value={newItem}\r\n                            onChange={(e) => setNewItem(e.target.value)}\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Button\r\n                            type=\"submit\"\r\n                            style={{\r\n                              backgroundColor: \"#DE989A\",\r\n                              border: \"#DE989A\",\r\n                              borderRadius: 10,\r\n                            }}\r\n                            onClick={(e) => {\r\n                              if (editingMode) {\r\n                                updateItem()\r\n                              } else {\r\n                                addItem()\r\n                              }\r\n                            }}\r\n                          >{editingMode ? \"Salvar\" : \"Adicionar\"}</Button>\r\n                        </Col>\r\n                      </Row>\r\n\r\n\r\n                    </Form>\r\n                  </Col>\r\n\r\n                </Row>\r\n\r\n                <ListGroup variant=\"flush\" style={{ marginTop: 20 }}>\r\n                  {selectedList?.items.map((item, index) =>\r\n                    <ListGroup.Item style={{ marginBottom: 10 }} key={index}>\r\n                      <Row>\r\n                        <Col md={1}><Form.Check tyle=\"checkbox\" /></Col>\r\n                        <Col md={9} onClick={() => startEditingMode(item)}>{item.name}{editingItem.id == item.id ? \" (Editando)\" : \"\"}</Col>\r\n                        <Col className=\"d-flex justify-content-end\" onClick={() => deleteItem(item)} ><FontAwesomeIcon icon={faTrash} /></Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )\r\n                  }\r\n                </ListGroup>\r\n              </div>\r\n            </Col>\r\n            :\r\n            \"\"\r\n        }\r\n\r\n      </Row>\r\n    </Container >\r\n  )\r\n\r\n}\r\n\r\nexport default Principal;\r\n","C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\paginas\\Principal\\modal.js",["74","75"],"import React, { useState } from \"react\";\r\nimport { Row, Col, Button, Modal, Form } from \"react-bootstrap\";\r\n\r\nimport API from \"../../servicos/api\";\r\n\r\nexport const AddListModal = (props) => {\r\n  const [list, setList] = useState({ name: \"\", user_id: props.user_id })\r\n\r\n  async function createList() {\r\n\r\n    await API.post(\"/list\", list, {\r\n      headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n      \"Authorization\": `Bearer ${props.token}`\r\n    }})\r\n      .then((response) => {\r\n        props.close()\r\n\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Modal show={true} style={{ borderRadius:10, borderWidth:2 }} onHide={()=> props.close()} >\r\n      <Modal.Header closeButton>\r\n\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n          <Form onSubmit={(e)=>e.preventDefault()}>\r\n            <Form.Group>\r\n              <Form.Label>Nome da lista</Form.Label>\r\n                <Form.Control\r\n                style={{\r\n                 borderColor: \"#DE989A\",\r\n                 borderWidht: \"1.5px\",\r\n                 outline: \"none\"\r\n               }}\r\n                type=\"text\"\r\n                onChange={(e)=>setList({...list,name: e.target.value})}\r\n                />\r\n            </Form.Group>\r\n            <Row>\r\n            <Col>\r\n            <Button\r\n              type=\"submit\"\r\n              style={{\r\n                backgroundColor: \"#DE989A\",\r\n                border: \"#DE989A\",\r\n                borderRadius: 10,\r\n                marginTop:20\r\n              }}\r\n              onClick={()=>createList()}\r\n            >\r\n              Feito!\r\n            </Button>\r\n            </Col>\r\n            </Row>\r\n          </Form>\r\n      </Modal.Body>\r\n\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport const AddItemList = (props) => {\r\n  const [list, setList] = useState({ name: \"\", user_id: null })\r\n\r\n  return (\r\n    <Modal show={props.show}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Modal heading</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\">\r\n          Close\r\n          </Button>\r\n        <Button variant=\"primary\">\r\n          Save Changes\r\n          </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n","C:\\Users\\vitor\\Desktop\\projeto web2\\listsproject\\src\\servicos\\api\\index.js",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":16,"column":10,"nodeType":"82","messageId":"83","endLine":16,"endColumn":15},{"ruleId":"80","severity":1,"message":"84","line":16,"column":17,"nodeType":"82","messageId":"83","endLine":16,"endColumn":25},{"ruleId":"80","severity":1,"message":"85","line":15,"column":10,"nodeType":"82","messageId":"83","endLine":15,"endColumn":17},{"ruleId":"80","severity":1,"message":"86","line":15,"column":19,"nodeType":"82","messageId":"83","endLine":15,"endColumn":29},{"ruleId":"87","severity":1,"message":"88","line":25,"column":14,"nodeType":"89","messageId":"90","endLine":25,"endColumn":16},{"ruleId":"87","severity":1,"message":"88","line":28,"column":25,"nodeType":"89","messageId":"90","endLine":28,"endColumn":27},{"ruleId":"87","severity":1,"message":"88","line":31,"column":25,"nodeType":"89","messageId":"90","endLine":31,"endColumn":27},{"ruleId":"87","severity":1,"message":"91","line":34,"column":25,"nodeType":"89","messageId":"90","endLine":34,"endColumn":27},{"ruleId":"87","severity":1,"message":"88","line":44,"column":33,"nodeType":"89","messageId":"90","endLine":44,"endColumn":35},{"ruleId":"80","severity":1,"message":"92","line":1,"column":27,"nodeType":"82","messageId":"83","endLine":1,"endColumn":36},{"ruleId":"80","severity":1,"message":"86","line":5,"column":19,"nodeType":"82","messageId":"83","endLine":5,"endColumn":29},{"ruleId":"93","severity":1,"message":"94","line":24,"column":6,"nodeType":"95","endLine":24,"endColumn":15,"suggestions":"96"},{"ruleId":"87","severity":1,"message":"88","line":29,"column":18,"nodeType":"89","messageId":"90","endLine":29,"endColumn":20},{"ruleId":"87","severity":1,"message":"88","line":32,"column":25,"nodeType":"89","messageId":"90","endLine":32,"endColumn":27},{"ruleId":"80","severity":1,"message":"97","line":1,"column":38,"nodeType":"82","messageId":"83","endLine":1,"endColumn":48},{"ruleId":"93","severity":1,"message":"98","line":45,"column":6,"nodeType":"95","endLine":45,"endColumn":8,"suggestions":"99"},{"ruleId":"87","severity":1,"message":"88","line":58,"column":38,"nodeType":"89","messageId":"90","endLine":58,"endColumn":40},{"ruleId":"100","severity":1,"message":"101","line":63,"column":44,"nodeType":"102","messageId":"103","endLine":63,"endColumn":46},{"ruleId":"87","severity":1,"message":"88","line":64,"column":27,"nodeType":"89","messageId":"90","endLine":64,"endColumn":29},{"ruleId":"93","severity":1,"message":"104","line":72,"column":6,"nodeType":"95","endLine":72,"endColumn":14,"suggestions":"105"},{"ruleId":"87","severity":1,"message":"88","line":272,"column":103,"nodeType":"89","messageId":"90","endLine":272,"endColumn":105},{"ruleId":"80","severity":1,"message":"106","line":69,"column":10,"nodeType":"82","messageId":"83","endLine":69,"endColumn":14},{"ruleId":"80","severity":1,"message":"107","line":69,"column":16,"nodeType":"82","messageId":"83","endLine":69,"endColumn":23},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'token' is assigned a value but never used.","Identifier","unusedVar","'setToken' is assigned a value but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["110"],"'useContext' is defined but never used.","React Hook useEffect has a missing dependency: 'lists'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSelectedList' needs the current value of 'lists'.",["111"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'selectedList.id', 'session?.id', and 'session?.token'. Either include them or remove the dependency array.",["112"],"'list' is assigned a value but never used.","'setList' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},"Update the dependencies array to be: [history, session]",{"range":"119","text":"120"},"Update the dependencies array to be: [lists]",{"range":"121","text":"122"},"Update the dependencies array to be: [selectedList.id, session?.id, session?.token, update]",{"range":"123","text":"124"},[715,724],"[history, session]",[1355,1357],"[lists]",[2152,2160],"[selectedList.id, session?.id, session?.token, update]"]
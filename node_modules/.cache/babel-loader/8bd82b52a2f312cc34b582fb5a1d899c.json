{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { Context } from \"../context\"; // Pode ser algum servidor executando localmente:\n// http://localhost:3000\n\nconsole.log(Context);\nconst API = axios.create({\n  baseURL: \"http://127.0.0.1:5000/\"\n});\n\nconst context = () => {\n  _s();\n\n  return useContext(Context);\n};\n\n_s(context, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nAPI.interceptors.request.use(config => {\n  config.headers = {\n    \"Content-Type\": \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Authorization\": `Bearer`\n  };\n  return config;\n}); // This should already be declared in your API file\n\nexport default API;","map":{"version":3,"sources":["/Users/user/Documents/Faculdade/desenvolvimentoWeb/lists/src/servicos/api/index.js"],"names":["axios","Context","console","log","API","create","baseURL","context","useContext","interceptors","request","use","config","headers"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB,C,CAEA;AACA;;AAEAC,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,MAAMG,GAAG,GAAGJ,KAAK,CAACK,MAAN,CAAa;AACvBC,EAAAA,OAAO,EAAE;AADc,CAAb,CAAZ;;AAIA,MAAMC,OAAO,GAAG;AAAA;;AAAA,SAAMC,UAAU,CAACP,OAAD,CAAhB;AAAA,CAAhB;;GAAMM,O;;AAENH,GAAG,CAACK,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA8BC,MAAD,IAAY;AACvCA,EAAAA,MAAM,CAACC,OAAP,GAAiB;AACf,oBAAgB,kBADD;AAEf,mCAA+B,GAFhB;AAGf,qBAAkB;AAHH,GAAjB;AAKA,SAAOD,MAAP;AACD,CAPD,E,CASA;;AACA,eAAeR,GAAf","sourcesContent":["import axios from \"axios\";\nimport { Context } from \"../context\"\n\n// Pode ser algum servidor executando localmente:\n// http://localhost:3000\n\nconsole.log(Context)\nconst API = axios.create({\n  baseURL: \"http://127.0.0.1:5000/\",\n});\n\nconst context = () => useContext(Context)\n\nAPI.interceptors.request.use((config) => {\n  config.headers = {\n    \"Content-Type\": \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Authorization\": `Bearer`\n  }\n  return config;\n});\n\n// This should already be declared in your API file\nexport default API;\n"]},"metadata":{},"sourceType":"module"}